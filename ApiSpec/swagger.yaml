swagger: '2.0'
info:
  version: v1
  title: REST API Documentation for Schoolbus
  description: API Sample
  termsOfService: None
basePath: /api
paths:
  /inspections:
    get:
      tags:
        - Inspection
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Inspection'        
      deprecated: false
    post:
      tags:
        - Inspection
      consumes: 
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/Inspection"
      responses:
        201:
          description: Inspection created
          headers:
            Location: 
              description: A link to the Inspection
              type: string
              format: url
          schema:
            $ref: "#/definitions/Inspection"
  /inspections/bulk:
    post:
      tags:
        - Inspection
      consumes: 
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/Inspection"
      responses:
        201:
          description: Inspections created
  /inspections/{id}:
    get:
      tags:
        - Inspection
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Inspection'
        404:
          description: Inspection not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of Inspection to fetch
          required: true
          type: integer
    put:
      tags:
        - Inspection
      consumes: 
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Inspection'
        404:
          description: Inspection not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of Inspection to fetch
          required: true
          type: integer
    delete:
      tags:
        - Inspection
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: Inspection not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of Inspection to delete
          required: true
          type: integer    
  /schoolbuses:
    get:
      summary: Returns a collection of school buses
      description: ""
      operationId: GetAllBuses
      tags:
        - SchoolBus
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/SchoolBus"
    post:
      summary: Creates a new school bus
      description: |
        The Location response-header field is used to redirect the recipient to a location other than the Request-URI for completion of the request or identification of a new resource. For 201 (Created) responses, the Location is that of the new resource which was created by the request. 
          The field value consists of a single absolute URI.
      operationId: AddBus
      tags:
        - SchoolBus
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolBus"
      responses:
        201:
          description: SchoolBus created
          headers:
            Location: 
              description: A link to the SchoolBus
              type: string
              format: url
          schema:
            $ref: "#/definitions/SchoolBus"
  /schoolbuses/bulk:
    post:
      summary: Creates several school buses
      description: 
        Used for bulk creation of schoolbus records.
      operationId: AddSchoolBusBulk
      tags:
        - SchoolBus
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/SchoolBus"
      responses:
        201:
          description: SchoolBus items created
  /schoolbuses/{id}:
    get:
      summary: Returns a single school bus object
      description: ""
      operationId: FindBusById
      tags:
        - SchoolBus
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: Id of SchoolBus to fetch
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/SchoolBus"
        404:
          description: Not Found
    put:
      summary: Updates a single school bus object
      description: ""
      tags:
        - SchoolBus
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: Id of SchoolBus to fetch
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/SchoolBus"
        404:
          description: Not Found 
    delete:
      tags:
        - SchoolBus
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: SchoolBus not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBus to delete
          required: true
          type: integer
  /schoolbus/{id}/inspections:
    get:
      tags:
        - SchoolBus
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Inspection'
        "404":
          description: SchoolBus not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBus to fetch Inspections for
          required: true
          type: integer
  /schoolbuses/{id}/notes:
    get:
      description: Returns notes for a particular SchoolBus.
      tags:
        - SchoolBus
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SchoolBusNote'
        "404":
           description: SchoolBus not found
      parameters:
        - name: id
          in: path
          description: id of SchoolBus to fetch notes for
          required: true
          type: integer
  /schoolbuses/{id}/attachments:
    get:
      description: Returns attachments for a particular SchoolBus
      tags:
        - SchoolBus
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SchoolBusAttachment'
        "404":
           description: SchoolBus not found
      parameters:
        - name: id
          in: path
          description: id of SchoolBus to fetch attachments for
          required: true
          type: integer
  /schoolbuses/{id}/history:
    get:
      description: Returns History for a particular SchoolBus
      tags:
        - SchoolBus
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SchoolBusHistory'
      parameters:
        - name: id
          in: path
          description: id of SchoolBus to fetch SchoolBusHistory for
          required: true
          type: integer
  /schoolbuses/{id}/ccwdata:
    get:
      description: Returns CCWData for a particular Schoolbus
      tags:
        - SchoolBus
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CCWData'
      parameters:
        - name: id
          in: path
          description: id of SchoolBus to fetch CCWData for
          required: true
          type: integer  
  /schoolbusnotes:
     get:
      tags:
        - SchoolBusNote
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SchoolBusNote'        
      deprecated: false
     post:
      tags:
        - SchoolBusNote
      consumes: 
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolBusNote"
      responses:
        201:
          description: SchoolBusNote created
          headers:
            Location: 
              description: A link to the SchoolBusNote
              type: string
              format: url
          schema:
            $ref: "#/definitions/SchoolBusNote"
  /schoolbusnotes/bulk:
    post:
      tags:
        - SchoolBusNote
      consumes: 
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/SchoolBusNote"
      responses:
        201:
          description: SchoolBusNotes created
  /schoolbusnotes/{id}:
    get:
      tags:
        - SchoolBusNote
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SchoolBusNote'
        404:
          description: SchoolBusNote not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusNote to fetch
          required: true
          type: integer
    put:
      tags:
        - SchoolBusNote
      consumes: 
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SchoolBusNote'
        404:
          description: SchoolBusNote not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusNote to fetch
          required: true
          type: integer
    delete:
      tags:
        - SchoolBusNote
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: SchoolBusNote not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusNote to delete
          required: true
          type: integer
  /schoolbusattachments:
     get:
      tags:
        - SchoolBusAttachment
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SchoolBusAttachment'        
      deprecated: false
     post:
      tags:
        - SchoolBusAttachment
      consumes: 
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolBusAttachment"
      responses:
        201:
          description: SchoolBusAttachment created
          headers:
            Location: 
              description: A link to the SchoolBusAttachment
              type: string
              format: url
          schema:
            $ref: "#/definitions/SchoolBusAttachment"
  /schoolbusattachments/bulk:
    post:
      tags:
        - SchoolBusAttachment
      consumes: 
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/SchoolBusAttachment"
      responses:
        201:
          description: SchoolBusAttachments created
  /schoolbusattachments/{id}:
    get:
      tags:
        - SchoolBusAttachment
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SchoolBusAttachment'
        404:
          description: SchoolBusAttachment not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusAttachment to fetch
          required: true
          type: integer
    put:
      tags:
        - SchoolBusAttachment
      consumes: 
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SchoolBusAttachment'
        404:
          description: SchoolBusAttachment not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusAttachment to fetch
          required: true
          type: integer
    delete:
      tags:
        - SchoolBusAttachment
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: SchoolBusAttachment not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusAttachment to delete
          required: true
          type: integer
  /schoolbushistories:
     get:
      tags:
        - SchoolBusHistory
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SchoolBusHistory'        
      deprecated: false
     post:
      tags:
        - SchoolBusHistory
      consumes: 
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolBusHistory"
      responses:
        201:
          description: SchoolBusHistory created
          headers:
            Location: 
              description: A link to the SchoolBusHistory
              type: string
              format: url
          schema:
            $ref: "#/definitions/SchoolBusHistory"
  /schoolbushistories/bulk:
    post:
      tags:
        - SchoolBusHistory
      consumes: 
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/SchoolBusHistory"
      responses:
        201:
          description: SchoolBusHistories created
  /schoolbushistories/{id}:
    get:
      tags:
        - SchoolBusAttachment
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SchoolBusAttachment'
        404:
          description: SchoolBusHistory not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusHistory to fetch
          required: true
          type: integer
    put:
      tags:
        - SchoolBusHistory
      consumes: 
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SchoolBusHistory'
        404:
          description: SchoolBusHistory not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusHistory to fetch
          required: true
          type: integer
    delete:
      tags:
        - SchoolBusHistory
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: SchoolBusHistory not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusHistory to delete
          required: true
          type: integer
  /notifications:
     get:
      tags:
        - Notification
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Notification'        
      deprecated: false
     post:
      tags:
        - Notification
      consumes: 
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/Notification"
      responses:
        201:
          description: Notification created
          headers:
            Location: 
              description: A link to the Notification
              type: string
              format: url
          schema:
            $ref: "#/definitions/Notification"
  /notifications/bulk:
    post:
      tags:
        - Notification
      consumes: 
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/Notification"
      responses:
        201:
          description: Notifications created
  /notifications/{id}:
    get:
      tags:
        - Notification
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Notification'
        404:
          description: Notification not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of Notification to fetch
          required: true
          type: integer
    put:
      tags:
        - Notification
      consumes: 
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Notification'
        404:
          description: Notification not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of Notification to fetch
          required: true
          type: integer
    delete:
      tags:
        - Notification
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: Notification not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of Notification to delete
          required: true
          type: integer
  /notificationevents:
     get:
      tags:
        - NotificationEvent
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/NotificationEvent'        
      deprecated: false
     post:
      tags:
        - NotificationEvent
      consumes: 
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/NotificationEvent"
      responses:
        201:
          description: NotificationEvent created
          headers:
            Location: 
              description: A link to the NotificationEvent
              type: string
              format: url
          schema:
            $ref: "#/definitions/NotificationEvent"
  /notificationevents/bulk:
    post:
      tags:
        - NotificationEvent
      consumes: 
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/NotificationEvent"
      responses:
        201:
          description: NotificationEvents created
  /notificationevents/{id}:
    get:
      tags:
        - NotificationEvent
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/NotificationEvent'
        404:
          description: NotificationEvent not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of NotificationEvent to fetch
          required: true
          type: integer
    put:
      tags:
        - NotificationEvent
      consumes: 
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/NotificationEvent'
        404:
          description: NotificationEvent not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of NotificationEvent to fetch
          required: true
          type: integer
    delete:
      tags:
        - NotificationEvent
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: NotificationEvent not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of NotificationEvent to delete
          required: true
          type: integer
  /schoolbusowners:
    get:
      tags:
        - SchoolBusOwner
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SchoolBusOwner'        
      deprecated: false
    post:
      tags:
        - SchoolBusOwner
      consumes: 
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolBusOwner"
      responses:
        201:
          description: SchoolBusOwner created
          headers:
            Location: 
              description: A link to the SchoolBusOwner
              type: string
              format: url
          schema:
            $ref: "#/definitions/SchoolBusOwner"
  /schoolbusowners/bulk:
    post:
      tags:
        - SchoolBusOwner
      consumes: 
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/SchoolBusOwner"
      responses:
        201:
          description: SchoolBusOwners created
          
  /schoolbusowners/{id}:
    get:
      description: Returns a particular SchoolBusOwner
      tags:
        - SchoolBusOwner
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SchoolBusOwner'
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwner to fetch
          required: true
          type: integer
    put:
      tags:
        - SchoolBusOwner
      consumes: 
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SchoolBusOwner'
        404:
          description: SchoolBusOwner not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwner to fetch
          required: true
          type: integer
    delete:
      tags:
        - SchoolBusOwner
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: SchoolBusOwner not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwner to delete
          required: true
          type: integer
  /schoolbusowners/{id}/attachments:
    get:
      description: Returns attachments for a particular SchoolBusOwner
      tags:
        - SchoolBusOwner
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SchoolBusOwnerAttachment'
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwner to fetch attachments for
          required: true
          type: integer
  /schoolbusowners/{id}/notes:
    get:
      description: Returns notes for a particular SchoolBusOwner
      tags:
        - SchoolBusOwner
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SchoolBusOwnerNote'
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwner to fetch notes for
          required: true
          type: integer
  /schoolbusowners/{id}/contactphones:
    get:
      description: Returns phone contacts for a particular SchoolBusOwner
      tags:
        - SchoolBusOwner
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SchoolBusOwnerContactPhone'
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwner to fetch contact phone for
          required: true
          type: integer
  /schoolbusowners/{id}/contactaddresses:
    get:
      description: Returns address contacts for a particular SchoolBusOwner
      tags:
        - SchoolBusOwner
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SchoolBusOwnerContactAddress'    
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwner to fetch contact address for
          required: true
          type: integer
  /schoolbusownernotes:
     get:
      tags:
        - SchoolBusOwnerNote
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SchoolBusOwnerNote'        
      deprecated: false
     post:
      tags:
        - SchoolBusOwnerNote
      consumes: 
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolBusOwnerNote"
      responses:
        201:
          description: SchoolBusOwnerNote created
          headers:
            Location: 
              description: A link to the SchoolBusOwnerNote
              type: string
              format: url
          schema:
            $ref: "#/definitions/SchoolBusOwnerNote"
  /schoolbusownernotes/bulk:
    post:
      tags:
        - SchoolBusOwnerNote
      consumes: 
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/SchoolBusOwnerNote"
      responses:
        201:
          description: SchoolBusOwnerNotes created
  /schoolbusownernotes/{id}:
    get:
      tags:
        - SchoolBusOwnerNote
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SchoolBusOwnerNote'
        404:
          description: SchoolBusOwnerNote not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwnerNote to fetch
          required: true
          type: integer
    put:
      tags:
        - SchoolBusOwnerNote
      consumes: 
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SchoolBusOwnerNote'
        404:
          description: SchoolBusOwnerNote not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwnerNote to fetch
          required: true
          type: integer
    delete:
      tags:
        - SchoolBusOwnerNote
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: SchoolBusOwnerNote not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwnerNote to delete
          required: true
          type: integer
  /schoolbusownerattachments:
     get:
      tags:
        - SchoolBusOwnerAttachment
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SchoolBusOwnerAttachment'        
      deprecated: false
     post:
      tags:
        - SchoolBusOwnerAttachment
      consumes: 
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolBusOwnerAttachment"
      responses:
        201:
          description: SchoolBusOwnerAttachment created
          headers:
            Location: 
              description: A link to the SchoolBusOwnerAttachment
              type: string
              format: url
          schema:
            $ref: "#/definitions/SchoolBusOwnerAttachment"
  /schoolbusownerattachments/bulk:
    post:
      tags:
        - SchoolBusOwnerAttachment
      consumes: 
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/SchoolBusOwnerAttachment"
      responses:
        201:
          description: SchoolBusOwnerAttachments created
  /schoolbusownerattachments/{id}:
    get:
      tags:
        - SchoolBusOwnerAttachment
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SchoolBusOwnerAttachment'
        404:
          description: SchoolBusOwnerAttachment not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwnerAttachment to fetch
          required: true
          type: integer
    put:
      tags:
        - SchoolBusOwnerAttachment
      consumes: 
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SchoolBusOwnerAttachment'
        404:
          description: SchoolBusOwnerAttachment not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwnerAttachment to fetch
          required: true
          type: integer
    delete:
      tags:
        - SchoolBusOwnerAttachment
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: SchoolBusOwnerAttachment not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwnerAttachment to delete
          required: true
          type: integer
  /schoolbusownerhistory:
     get:
      tags:
        - SchoolBusOwnerHistory
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SchoolBusOwnerHistory'        
      deprecated: false
     post:
      tags:
        - SchoolBusOwnerHistory
      consumes: 
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolBusOwnerHistory"
      responses:
        201:
          description: SchoolBusOwnerHistory created
          headers:
            Location: 
              description: A link to the SchoolBusOwnerHistory
              type: string
              format: url
          schema:
            $ref: "#/definitions/SchoolBusOwnerHistory"
  /schoolbusownerhistory/bulk:
    post:
      tags:
        - SchoolBusOwnerHistory
      consumes: 
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/SchoolBusOwnerHistory"
      responses:
        201:
          description: SchoolBusOwnerHistories created
  /schoolbusownerhistory/{id}:
    get:
      tags:
        - SchoolBusOwnerHistory
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SchoolBusOwnerAttachment'
        404:
          description: SchoolBusOwnerHistory not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwnerHistory to fetch
          required: true
          type: integer
    put:
      tags:
        - SchoolBusOwnerHistory
      consumes: 
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SchoolBusOwnerHistory'
        404:
          description: SchoolBusOwnerHistory not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwnerHistory to fetch
          required: true
          type: integer
    delete:
      tags:
        - SchoolBusOwnerHistory
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: SchoolBusOwnerHistory not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwnerHistory to delete
          required: true
          type: integer
  /favouritecontexttypes:
    get:
      description: Returns list of available FavouriteContextTypes
      tags:
        - SchoolBusOwner
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/FavouriteContextType'
  /groups:
    get:
      description: Returns a collection of groups
      tags:
        - Group
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Group'
  /permissions:
    get:
      description: Returns a collection of permissions
      tags:
        - Permission
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Permission'
  /roles:
    get:
      description: Returns a collection of roles
      tags:
        - Role
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Role'
    post:
      tags:
        - Role
      consumes: 
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/Role"
      responses:
        201:
          description: Role created
          headers:
            Location: 
              description: A link to the Role
              type: string
              format: url
          schema:
            $ref: "#/definitions/Role"
  /roles/{id}:
    get:
      tags:
        - Role
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Role to fetch
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Role'
        404:
          description: Role not found
    put:
      tags:
        - Role
      consumes: 
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Role to update
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Role'
        404:
          description: Role not found
    delete:
      tags:
        - Role
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Role to delete
          required: true
          type: integer    
      responses:
        200:
          description: OK
        404:
          description: Role not found
  /roles/{id}/permissions:
    get:
      description: Get all the permissions for a role
      tags:
        - Role
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Role to fetch
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Permission'    
    put:
      description: Updates the permissions for a role
      tags:
        - Role
      consumes: 
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Role to update
          required: true
          type: integer
        - name: body
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/Permission"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Permission"
        404:
          description: Role not found
  /roles/{id}/users:
    get:
      description: Get all the users for a role
      tags:
        - Role
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Role to fetch
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/User'    
    put:
      description: Updates the users for a role
      tags:
        - Role
      consumes: 
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Role to update
          required: true
          type: integer
        - name: body
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/User"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/User"
        404:
          description: Role not found
  /users:
    get:
      description: Returns all users
      tags:
        - User
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/User'    
        404:
           description: User not found
    post:
      description: Create new user
      tags:
        - User
      consumes: 
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        201:
          description: User created
          headers:
            Location: 
              description: A link to the User
              type: string
              format: url
          schema:
            $ref: "#/definitions/User"
  /users/current:
    get:
      description: Get the currently logged in user
      tags:
        - User
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/User'
  /users/bulk:
    post:
      description: Adds a number of users
      tags:
        - User
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/User"
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/User'
  /users/{id}:
    get:
      description: Returns data for a particular user
      tags:
        - User
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to fetch
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/User'    
        404:
           description: User not found
    put:
      description: Updates a user
      tags:
        - User
      consumes: 
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to update
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/User'
        404:
          description: User not found
    delete:
      description: Deletes a user
      tags:
        - User
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to delete
          required: true
          type: integer    
      responses:
        200:
          description: OK
        404:
          description: User not found
  /users/{id}/roles:
    get:
      description: Returns the roles for a user
      tags:
        - User
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to fetch
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/UserRole'    
        404:
           description: User not found
    post:
      description: Adds a role to a user
      tags:
        - User
      consumes: 
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to update
          required: true
          type: integer
        - name: body
          in: body
          required: true
          schema:
            $ref: "#/definitions/UserRole"
      responses:
        201:
          description: Role created for user
          headers:
            Location: 
              description: A link to the User Role
              type: string
              format: url
          schema:
            $ref: "#/definitions/UserRole"
    put:
      description: Updates the roles for a user
      tags:
        - User
      consumes: 
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to update
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/UserRole'
        404:
          description: User not found
  /users/{id}/permissions:
    get:
      description: Returns the set of permissions for a user
      tags:
        - User
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to fetch
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Permission'    
        404:
           description: User not found
  /users/{id}/groups:
    get:
      description: Returns all groups that a user is a member of
      tags:
        - User
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to fetch
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/GroupMembership'    
        404:
           description: User not found
    put:
      description: Updates the active set of groups for a user
      tags:
        - User
      consumes: 
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to update
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/GroupMembership'
        404:
          description: User not found
  /users/{id}/favourites:
    get:
      description: Returns a user's favourites of a given context type
      tags:
        - User
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/UserFavourite'
        "404":
           description: User not found
      parameters:
        - name: id
          in: path
          description: id of User to fetch favorites for
          required: true
          type: integer
  /users/{id}/notification:
    get:
      description: Returns a user's notifications
      tags:
        - User
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Notification'
      parameters:
        - name: id
          in: path
          description: id of User to fetch notifications for
          required: true
          type: integer
  /regions:
    get:
      description: Returns a list of available regions
      tags:
        - Region
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Region'   
    post:
      description: Adds a region
      tags:
        - Region
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Region"
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Region'
  /regions/bulk:
    post:
      description: Adds a number of regions.
      tags:
        - Region
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/Region"
      responses:
        '200':
          description: OK
  /regions/{id}:
    get:
      description: Returns a specific region
      tags:
        - Region
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Region'
      parameters:
        - name: id
          in: path
          description: id of Regions to fetch
          required: true
          type: integer
    put:
      description: Updates a region
      tags:
        - Region
      consumes: 
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Region to update
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Region"
      responses:
        200:
          description: OK
        404:
          description: Region not found
    delete:
      description: Deletes a region
      tags:
        - Region
      consumes: 
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Region to delete
          required: true
          type: integer
      responses:
        200:
          description: OK
        404:
          description: Region not found   
  /regions/{id}/cities:
    get:
      description: Returns a list of cities for a given region
      tags:
        - Region
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/City'
      parameters:
        - name: id
          in: path
          description: id of Region to fetch Cities for
          required: true
          type: integer
  /regions/{id}/localareas:
    get:
      description: Returns a list of LocalAreas for a given region
      tags:
        - Region
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/LocalArea'
      parameters:
        - name: id
          in: path
          description: id of Region to fetch SchoolDistricts for
          required: true
          type: integer        
  /regions/{id}/schooldistricts:
    get:
      description: Returns a list of SchoolDistricts for a given region
      tags:
        - SchoolDistrict
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SchoolDistrict'
      parameters:
        - name: id
          in: path
          description: id of Region to fetch SchoolDistricts for
          required: true
          type: integer
definitions:
  SchoolBus:
    type: object
    required:
      - id
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
        x-type-options:
          min: 1
          max: 1000
      SchoolBusOwner:
        $ref: '#/definitions/SchoolBusOwner'
      IsActive: 
        type: boolean
      IsOutOfProvince:
        type: boolean
      NextInspection:
        type: string
        format: date-time
      CRNO:
        type: string
        description: CR Number.
      NameOfIndependentSchool:
        type: string
      CCWData:
        $ref: '#/definitions/CCWData'
  SchoolBusNote:
    type: object
    required:
      - id 
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
        x-type-options:
          min: 1
          max: 1000
      Value:
        type: string
      Expired:
        type: boolean
      SchoolBus:
          $ref: '#/definitions/SchoolBus'
  SchoolBusAttachment:
    type: object
    required:
      - id  
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
        x-type-options:
          min: 1
          max: 1000
      InternalFileName:
        type: string
      ExternalFileName:
        type: string
      SchoolBus:
          $ref: '#/definitions/SchoolBus'
  SchoolBusHistory:
    type: object
    required:
      - id    
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
        x-type-options:
          min: 1
          max: 1000
      SchoolBus:
          $ref: '#/definitions/SchoolBus'
  SchoolBusOwner:
    type: object
    required:
      - id    
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key  
        x-type-options:
          min: 1
          max: 1000
      Name:
        type: string
      IsActive:
        type: boolean
      DateCreated:
        type: string
        format: date-time
      PrimaryContact:
        $ref: '#/definitions/SchoolBusOwnerContact'
      LocalArea:
        $ref: '#/definitions/LocalArea'
      City: 
        $ref: '#/definitions/City'
  SchoolBusOwnerAttachment:
    type: object
    required:
      - id    
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
        x-type-options:
          min: 1
          max: 1000
      SchoolBusOwner:
          $ref: '#/definitions/SchoolBusOwner'    
  SchoolBusOwnerNote:
    type: object
    required:
      - id    
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
        x-type-options:
          min: 1
          max: 1000
      Expired:
        type: boolean
      SchoolBusOwner:
          $ref: '#/definitions/SchoolBusOwner'    
  SchoolBusOwnerContact:
    type: object
    required:
      - id    
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
        x-type-options:
          min: 1
          max: 1000
      SchoolBusOwner:
          $ref: '#/definitions/SchoolBusOwner'    
  SchoolBusOwnerContactPhone:
    type: object
    required:
      - id    
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
        x-type-options:
          min: 1
          max: 1000
      SchoolBusOwnerContact:
          $ref: '#/definitions/SchoolBusOwnerContact'    
  SchoolBusOwnerContactAddress:
    type: object
    required:
      - id    
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
        x-type-options:
          min: 1
          max: 1000
      SchoolBusOwnerContact:
          $ref: '#/definitions/SchoolBusOwnerContact' 
  SchoolBusOwnerHistory:
    type: object
    required:
      - id    
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
        x-type-options:
          min: 1
          max: 1000
      SchoolBusOwner:
          $ref: '#/definitions/SchoolBusOwner'
  CCWData:
    type: object
    required:
      - id    
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
        x-type-options:
          min: 1
          max: 1000
      ModelYear:
        format:  int32
        type: integer
        description: Vehicle Year
        x-type-options:
          min: 1970
          max: 2017
      RateClass:
        type: string
      CVIPDecal:
        type: string
      FleetUnitNo: 
        type: integer
      GVW:
        type: integer
      Body:
        type: string
      RebuiltStatus:
        type: string
      CVIPExpiry:
        type: string
        format: date-time
      NetWt:
        type: integer
      Model:
        type: string
      Fuel:
        type: string
      SeatingCapacity:
        type: integer
      Colour:
        type: string
  Inspection:
    required:
      - id  
    type: object
    properties:
      id:
          format: int32
          type: integer
          description: Primary Key  make this match the Inspection Details page
          x-type-options:
            min: 1
            max: 1000
      SchoolBus:
        $ref: '#/definitions/SchoolBus'
      Inspector:
        $ref: '#/definitions/User'
  FavouriteContextType:
    type: object
    required:
      - id    
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
        x-type-options:
          min: 1
          max: 1000
      Name:
        type: string
        description:  Context Name
        x-chance-type: name
  UserFavourite:
    type: object
    required:
      - id  
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
        x-type-options:
          min: 1
          max: 1000
      Name: 
        type: string
        description:  Context Name
        x-chance-type: name
      Value:
        type: string
        description:  Saved search
        x-chance-type: word
      IsDefault:
        type: boolean
      FavouriteContextType:
        $ref: '#/definitions/FavouriteContextType'
  Region:
    type: object
    required:
      - id  
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
        x-type-options:
          min: 1
          max: 1000
      Name:
        type: string
        format: string
        description:  Region Name
        x-chance-type: name
  City:
    type: object
    required:
      - id  
    properties:
      id:
          format: int32
          type: integer
          description: Primary Key
          x-type-options:
            min: 1
            max: 1000
      Name:
        type: string
        format: string
        description:  City Name
        x-chance-type: name
      Region:
        $ref: '#/definitions/Region'
  LocalArea:
    type: object
    required:
      - id  
    properties:
      id:
          format: int32
          type: integer
          description: Primary Key
          x-type-options:
            min: 1
            max: 1000
      Name:
          type: string
          format: string
          description:  City Name
          x-chance-type: name          
      Region:
        $ref: '#/definitions/Region'
  SchoolDistrict:
    type: object
    required:
      - id  
    properties:
      id:
          format: int32
          type: integer
          description: Primary Key
          x-type-options:
            min: 1
            max: 1000
      Name:
          format: string          
          description:  City Name
          x-chance-type: name
      Region:
        $ref: '#/definitions/Region'
  Notification:
    type: object
    required:
      - id
    properties:
      id:
          format: int32
          type: integer
          description: Primary Key
          x-type-options:
            min: 1
            max: 1000
      Event:
          $ref: '#/definitions/NotificationEvent'
      Event2:
          $ref: '#/definitions/NotificationEvent'
      HasBeenViewed:
        type: boolean
      IsWatchNotification:
        type: boolean
      IsExpired:
        type: boolean
      IsAllDay:
        type: boolean
      PriorityCode: 
        type: string
      User:
        $ref: '#/definitions/User'
  NotificationEvent:
    type: object
    required:
      - id
    properties:
      id:
          format: int32
          type: integer
          description: Primary Key
          x-type-options:
            min: 1
            max: 1000
      EventTime:
        type: string
        format: datetime
      EventTypeCode:
        type: string
      EventSubTypeCode:
        type: string
      Notes:
        type: string
      NotificationGenerated:
        type: boolean
      SchoolBus:
        $ref: '#/definitions/SchoolBus'
        
  User:
    type: object
    required:
      - id
      - active
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
        x-type-options:
          min: 1
          max: 1000
      givenName:
        type: string
        x-chance-type: name
      surname:
        type: string
        x-chance-type: name
      initials:
        type: string
      email:
        type: string
        x-chance-type: email
      active:
        type: boolean
      smUserId:
        type: string
        description: Security Manager User ID
        x-chance-type: name
      guid:
        type: string
      smAuthorizationDirectory:
        type: string
      userRoles:
        type: array
        items:
          $ref: '#/definitions/UserRole'
      groupMemberships:
        type: array
        items:
          $ref: '#/definitions/GroupMembership'
  UserRole:
    type: object
    required:
      - id
      - effectiveDate
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
        x-type-options:
          min: 1
          max: 1000
      effectiveDate:
        type: string
        format: date-time
      expiryDate:
        type: string
        format: date-time
      user:
        $ref: '#/definitions/User'
      role:
        $ref: '#/definitions/Role'
  Role:
    type: object
    required:
      - id
      - name
      - description
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
        x-type-options:
          min: 1
          max: 1000
      name:
        type: string
        x-chance-type: name
      description:
        type: string
        x-chance-type: sentence
      rolePermissions:
        type: array
        items:
          $ref: '#/definitions/RolePermission'
      userRoles:
        type: array
        items:
          $ref: '#/definitions/UserRole'
  RolePermission:
    type: object
    required:
      - id
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
        x-type-options:
          min: 1
          max: 1000
      role:
        $ref: '#/definitions/Role'
      permision:
        $ref: '#/definitions/Permission'
  Permission:
    type: object
    required:
      - id
      - code
      - name
      - description
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
        x-type-options:
          min: 1
          max: 1000
      code:
        type: string
      name:
        type: string
        x-chance-type: name
      description:
        type: string
        x-chance-type: sentence
  GroupMembership:
    type: object
    required:
      - id
      - active
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
        x-type-options:
          min: 1
          max: 1000
      active:
        type: boolean
      group:
        $ref: '#/definitions/Group'
      user:
        $ref: '#/definitions/User'
  Group:
    type: object
    required:
      - id
      - name
      - description
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
        x-type-options:
          min: 1
          max: 1000
      name:
        type: string
        x-chance-type: name
      description:
        type: string
        x-chance-type: sentence        
securityDefinitions: {}