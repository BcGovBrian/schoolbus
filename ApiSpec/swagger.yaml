swagger: '2.0'
info:
  version: v1
  title: REST API Documentation for the MOTI School Bus Application
  description: The School Bus application tracks that inspections are performed in a timely fashion. For each school bus the application tracks information about the bus (including data from ICBC, NSC, etc.), it's past and next inspection dates and results, contacts, and the inspector responsible for next inspecting the bus.
  termsOfService: N/A
basePath: /api
paths:
  /inspections:
    get:
      tags:
        - Inspection
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Inspection'
      deprecated: false
    post:
      tags:
        - Inspection
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Inspection"
      responses:
        201:
          description: Inspection created
          headers:
            Location:
              description: A link to the Inspection
              type: string
              format: url
          schema:
            $ref: "#/definitions/Inspection"
  /inspections/bulk:
    post:
      tags:
        - Inspection
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/Inspection"
      responses:
        201:
          description: Inspections created
  /inspections/{id}:
    get:
      tags:
        - Inspection
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Inspection'
        404:
          description: Inspection not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of Inspection to fetch
          required: true
          type: integer
    put:
      tags:
        - Inspection
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Inspection'
        404:
          description: Inspection not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of Inspection to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Inspection"
  /inspections/{id}/delete:
    post:
      tags:
        - Inspection
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: Inspection not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of Inspection to delete
          required: true
          type: integer
  /schoolbuses:
    get:
      summary: Returns a collection of school buses
      description: ""
      operationId: GetAllBuses
      tags:
        - SchoolBus
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/SchoolBus"
    post:
      summary: Creates a new school bus
      description: |
        The Location response-header field is used to redirect the recipient to a location other than the Request-URI for completion of the request or identification of a new resource. For 201 (Created) responses, the Location is that of the new resource which was created by the request.
          The field value consists of a single absolute URI.
      operationId: AddBus
      tags:
        - SchoolBus
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolBus"
      responses:
        201:
          description: SchoolBus created
          headers:
            Location:
              description: A link to the SchoolBus
              type: string
              format: url
          schema:
            $ref: "#/definitions/SchoolBus"
  /schoolbuses/bulk:
    post:
      summary: Creates several school buses
      description:
        Used for bulk creation of schoolbus records.
      operationId: AddSchoolBusBulk
      tags:
        - SchoolBus
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/SchoolBus"
      responses:
        201:
          description: SchoolBus items created
  /schoolbuses/{id}:
    get:
      summary: Returns a single school bus object
      description: ""
      operationId: FindBusById
      tags:
        - SchoolBus
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: Id of SchoolBus to fetch
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/SchoolBus"
        404:
          description: Not Found
    put:
      summary: Updates a single school bus object
      description: ""
      tags:
        - SchoolBus
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: Id of SchoolBus to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolBus"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/SchoolBus"
        404:
          description: Not Found
  /schoolbuses/{id}/delete:
    post:
      tags:
        - SchoolBus
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: SchoolBus not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBus to delete
          required: true
          type: integer
  /schoolbuses/{id}/inspections:
    get:
      tags:
        - SchoolBus
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Inspection'
        "404":
          description: SchoolBus not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBus to fetch Inspections for
          required: true
          type: integer
  /schoolbuses/{id}/notes:
    get:
      description: Returns notes for a particular SchoolBus.
      tags:
        - SchoolBus
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SchoolBusNote'
        "404":
           description: SchoolBus not found
      parameters:
        - name: id
          in: path
          description: id of SchoolBus to fetch notes for
          required: true
          type: integer
  /schoolbuses/{id}/attachments:
    get:
      description: Returns attachments for a particular SchoolBus
      tags:
        - SchoolBus
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SchoolBusAttachment'
        "404":
           description: SchoolBus not found
      parameters:
        - name: id
          in: path
          description: id of SchoolBus to fetch attachments for
          required: true
          type: integer
  /schoolbuses/{id}/history:
    get:
      description: Returns History for a particular SchoolBus
      tags:
        - SchoolBus
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SchoolBusHistory'
      parameters:
        - name: id
          in: path
          description: id of SchoolBus to fetch SchoolBusHistory for
          required: true
          type: integer
  /schoolbuses/{id}/ccwdata:
    get:
      description: Returns CCWData for a particular Schoolbus
      tags:
        - SchoolBus
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/CCWData'
      parameters:
        - name: id
          in: path
          description: id of SchoolBus to fetch CCWData for
          required: true
          type: integer
  /schoolbusnotes:
     get:
      tags:
        - SchoolBusNote
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SchoolBusNote'
      deprecated: false
     post:
      tags:
        - SchoolBusNote
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolBusNote"
      responses:
        201:
          description: SchoolBusNote created
          headers:
            Location:
              description: A link to the SchoolBusNote
              type: string
              format: url
          schema:
            $ref: "#/definitions/SchoolBusNote"
  /schoolbusnotes/bulk:
    post:
      tags:
        - SchoolBusNote
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/SchoolBusNote"
      responses:
        201:
          description: SchoolBusNotes created
  /schoolbusnotes/{id}:
    get:
      tags:
        - SchoolBusNote
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SchoolBusNote'
        404:
          description: SchoolBusNote not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusNote to fetch
          required: true
          type: integer
    put:
      tags:
        - SchoolBusNote
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SchoolBusNote'
        404:
          description: SchoolBusNote not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusNote to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolBusNote"
  /schoolbusnotes/{id}/delete:
    post:
      tags:
        - SchoolBusNote
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: SchoolBusNote not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusNote to delete
          required: true
          type: integer
  /schoolbusattachments:
     get:
      tags:
        - SchoolBusAttachment
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SchoolBusAttachment'
      deprecated: false
     post:
      tags:
        - SchoolBusAttachment
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolBusAttachment"
      responses:
        201:
          description: SchoolBusAttachment created
          headers:
            Location:
              description: A link to the SchoolBusAttachment
              type: string
              format: url
          schema:
            $ref: "#/definitions/SchoolBusAttachment"
  /schoolbusattachments/bulk:
    post:
      tags:
        - SchoolBusAttachment
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/SchoolBusAttachment"
      responses:
        201:
          description: SchoolBusAttachments created
  /schoolbusattachments/{id}:
    get:
      tags:
        - SchoolBusAttachment
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SchoolBusAttachment'
        404:
          description: SchoolBusAttachment not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusAttachment to fetch
          required: true
          type: integer
    put:
      tags:
        - SchoolBusAttachment
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SchoolBusAttachment'
        404:
          description: SchoolBusAttachment not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusAttachment to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolBusAttachment"
  /schoolbusattachments/{id}/delete:
    post:
      tags:
        - SchoolBusAttachment
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: SchoolBusAttachment not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusAttachment to delete
          required: true
          type: integer
  /schoolbushistories:
     get:
      tags:
        - SchoolBusHistory
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SchoolBusHistory'
      deprecated: false
     post:
      tags:
        - SchoolBusHistory
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolBusHistory"
      responses:
        201:
          description: SchoolBusHistory created
          headers:
            Location:
              description: A link to the SchoolBusHistory
              type: string
              format: url
          schema:
            $ref: "#/definitions/SchoolBusHistory"
  /schoolbushistories/bulk:
    post:
      tags:
        - SchoolBusHistory
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/SchoolBusHistory"
      responses:
        201:
          description: SchoolBusHistories created
  /schoolbushistories/{id}:
    get:
      tags:
        - SchoolBusHistory
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SchoolBusHistory'
        404:
          description: SchoolBusHistory not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusHistory to fetch
          required: true
          type: integer
    put:
      tags:
        - SchoolBusHistory
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SchoolBusHistory'
        404:
          description: SchoolBusHistory not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusHistory to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolBusHistory"
  /schoolbushistories/{id}/delete:
    post:
      tags:
        - SchoolBusHistory
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: SchoolBusHistory not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusHistory to delete
          required: true
          type: integer
  /notifications:
     get:
      tags:
        - Notification
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Notification'
      deprecated: false
     post:
      tags:
        - Notification
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Notification"
      responses:
        201:
          description: Notification created
          headers:
            Location:
              description: A link to the Notification
              type: string
              format: url
          schema:
            $ref: "#/definitions/Notification"
  /notifications/bulk:
    post:
      tags:
        - Notification
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/Notification"
      responses:
        201:
          description: Notifications created
  /notifications/{id}:
    get:
      tags:
        - Notification
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Notification'
        404:
          description: Notification not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of Notification to fetch
          required: true
          type: integer
    put:
      tags:
        - Notification
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/Notification'
        404:
          description: Notification not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of Notification to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Notification"
  /notifications/{id}/delete:
    post:
      tags:
        - Notification
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: Notification not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of Notification to delete
          required: true
          type: integer
  /notificationevents:
     get:
      tags:
        - NotificationEvent
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/NotificationEvent'
      deprecated: false
     post:
      tags:
        - NotificationEvent
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/NotificationEvent"
      responses:
        201:
          description: NotificationEvent created
          headers:
            Location:
              description: A link to the NotificationEvent
              type: string
              format: url
          schema:
            $ref: "#/definitions/NotificationEvent"
  /notificationevents/bulk:
    post:
      tags:
        - NotificationEvent
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/NotificationEvent"
      responses:
        201:
          description: NotificationEvents created
  /notificationevents/{id}:
    get:
      tags:
        - NotificationEvent
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/NotificationEvent'
        404:
          description: NotificationEvent not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of NotificationEvent to fetch
          required: true
          type: integer
    put:
      tags:
        - NotificationEvent
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/NotificationEvent'
        404:
          description: NotificationEvent not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of NotificationEvent to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/NotificationEvent"       
  /notificationevents/{id}/delete:
    post:
      tags:
        - NotificationEvent
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: NotificationEvent not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of NotificationEvent to delete
          required: true
          type: integer
  /schoolbusowners:
    get:
      tags:
        - SchoolBusOwner
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SchoolBusOwner'
      deprecated: false
    post:
      tags:
        - SchoolBusOwner
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolBusOwner"
      responses:
        201:
          description: SchoolBusOwner created
          headers:
            Location:
              description: A link to the SchoolBusOwner
              type: string
              format: url
          schema:
            $ref: "#/definitions/SchoolBusOwner"
  /schoolbusowners/bulk:
    post:
      tags:
        - SchoolBusOwner
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/SchoolBusOwner"
      responses:
        201:
          description: SchoolBusOwners created
  /schoolbusowners/{id}:
    get:
      description: Returns a particular SchoolBusOwner
      tags:
        - SchoolBusOwner
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SchoolBusOwner'
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwner to fetch
          required: true
          type: integer
    put:
      tags:
        - SchoolBusOwner
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SchoolBusOwner'
        404:
          description: SchoolBusOwner not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwner to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolBusOwner"
  /schoolbusowners/{id}/delete:
    post:
      tags:
        - SchoolBusOwner
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: SchoolBusOwner not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwner to delete
          required: true
          type: integer
  /schoolbusowners/{id}/attachments:
    get:
      description: Returns attachments for a particular SchoolBusOwner
      tags:
        - SchoolBusOwner
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SchoolBusOwnerAttachment'
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwner to fetch attachments for
          required: true
          type: integer
  /schoolbusowners/{id}/notes:
    get:
      description: Returns notes for a particular SchoolBusOwner
      tags:
        - SchoolBusOwner
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SchoolBusOwnerNote'
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwner to fetch notes for
          required: true
          type: integer
  /schoolbusowners/{id}/contactphones:
    get:
      description: Returns phone contacts for a particular SchoolBusOwner
      tags:
        - SchoolBusOwner
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SchoolBusOwnerContactPhone'
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwner to fetch contact phone for
          required: true
          type: integer
  /schoolbusowners/{id}/contactaddresses:
    get:
      description: Returns address contacts for a particular SchoolBusOwner
      tags:
        - SchoolBusOwner
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SchoolBusOwnerContactAddress'
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwner to fetch contact address for
          required: true
          type: integer
  /schoolbusownernotes:
     get:
      tags:
        - SchoolBusOwnerNote
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SchoolBusOwnerNote'
      deprecated: false
     post:
      tags:
        - SchoolBusOwnerNote
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolBusOwnerNote"
      responses:
        201:
          description: SchoolBusOwnerNote created
          headers:
            Location:
              description: A link to the SchoolBusOwnerNote
              type: string
              format: url
          schema:
            $ref: "#/definitions/SchoolBusOwnerNote"
  /schoolbusownernotes/bulk:
    post:
      tags:
        - SchoolBusOwnerNote
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/SchoolBusOwnerNote"
      responses:
        201:
          description: SchoolBusOwnerNotes created
  /schoolbusownernotes/{id}:
    get:
      tags:
        - SchoolBusOwnerNote
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SchoolBusOwnerNote'
        404:
          description: SchoolBusOwnerNote not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwnerNote to fetch
          required: true
          type: integer
    put:
      tags:
        - SchoolBusOwnerNote
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SchoolBusOwnerNote'
        404:
          description: SchoolBusOwnerNote not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwnerNote to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolBusOwnerNote"
  /schoolbusownernotes/{id}/delete:
    post:
      tags:
        - SchoolBusOwnerNote
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: SchoolBusOwnerNote not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwnerNote to delete
          required: true
          type: integer
  /schoolbusownerattachments:
     get:
      tags:
        - SchoolBusOwnerAttachment
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SchoolBusOwnerAttachment'
      deprecated: false
     post:
      tags:
        - SchoolBusOwnerAttachment
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolBusOwnerAttachment"
      responses:
        201:
          description: SchoolBusOwnerAttachment created
          headers:
            Location:
              description: A link to the SchoolBusOwnerAttachment
              type: string
              format: url
          schema:
            $ref: "#/definitions/SchoolBusOwnerAttachment"
  /schoolbusownerattachments/bulk:
    post:
      tags:
        - SchoolBusOwnerAttachment
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/SchoolBusOwnerAttachment"
      responses:
        201:
          description: SchoolBusOwnerAttachments created
  /schoolbusownerattachments/{id}:
    get:
      tags:
        - SchoolBusOwnerAttachment
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SchoolBusOwnerAttachment'
        404:
          description: SchoolBusOwnerAttachment not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwnerAttachment to fetch
          required: true
          type: integer
    put:
      tags:
        - SchoolBusOwnerAttachment
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SchoolBusOwnerAttachment'
        404:
          description: SchoolBusOwnerAttachment not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwnerAttachment to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolBusOwnerAttachment"
  /schoolbusownerattachments/{id}/delete:
    post:
      tags:
        - SchoolBusOwnerAttachment
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: SchoolBusOwnerAttachment not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwnerAttachment to delete
          required: true
          type: integer
  /schoolbusownercontacts:
     get:
      tags:
        - SchoolBusOwnerContact
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SchoolBusOwnerContact'
      deprecated: false
     post:
      tags:
        - SchoolBusOwnerContact
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolBusOwnerContact"
      responses:
        201:
          description: SchoolBusOwnerContact created
          headers:
            Location:
              description: A link to the SchoolBusOwnerContact
              type: string
              format: url
          schema:
            $ref: "#/definitions/SchoolBusOwnerContact"
  /schoolbusownercontacts/bulk:
    post:
      tags:
        - SchoolBusOwnerContact
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/SchoolBusOwnerContact"
      responses:
        201:
          description: SchoolBusOwnerContacts created
  /schoolbusownercontacts/{id}:
    get:
      tags:
        - SchoolBusOwnerContact
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SchoolBusOwnerContact'
        404:
          description: SchoolBusOwnerContact not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwnerContact to fetch
          required: true
          type: integer
    put:
      tags:
        - SchoolBusOwnerContact
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SchoolBusOwnerContact'
        404:
          description: SchoolBusOwnerContact not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwnerContact to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolBusOwnerContact"
  /schoolbusownercontacts/{id}/delete:
    post:
      tags:
        - SchoolBusOwnerContact
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: SchoolBusOwnerContact not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwnerContact to delete
          required: true
          type: integer
  /schoolbusownerhistory:
     get:
      tags:
        - SchoolBusOwnerHistory
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SchoolBusOwnerHistory'
      deprecated: false
     post:
      tags:
        - SchoolBusOwnerHistory
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolBusOwnerHistory"
      responses:
        201:
          description: SchoolBusOwnerHistory created
          headers:
            Location:
              description: A link to the SchoolBusOwnerHistory
              type: string
              format: url
          schema:
            $ref: "#/definitions/SchoolBusOwnerHistory"
  /schoolbusownerhistory/bulk:
    post:
      tags:
        - SchoolBusOwnerHistory
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/SchoolBusOwnerHistory"
      responses:
        201:
          description: SchoolBusOwnerHistories created
  /schoolbusownerhistory/{id}:
    get:
      tags:
        - SchoolBusOwnerHistory
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SchoolBusOwnerAttachment'
        404:
          description: SchoolBusOwnerHistory not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwnerHistory to fetch
          required: true
          type: integer
    put:
      tags:
        - SchoolBusOwnerHistory
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/SchoolBusOwnerHistory'
        404:
          description: SchoolBusOwnerHistory not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwnerHistory to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolBusOwnerHistory"
  /schoolbusownerhistory/{id}/delete:
    post:
      tags:
        - SchoolBusOwnerHistory
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: SchoolBusOwnerHistory not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwnerHistory to delete
          required: true
          type: integer
  /favouritecontexttypes:
    get:
      description: Returns list of available FavouriteContextTypes
      tags:
        - SchoolBusOwner
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/FavouriteContextType'
  /groups:
    get:
      description: Returns a collection of groups
      tags:
        - Group
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/GroupViewModel"
  /permissions:
    get:
      description: Returns a collection of permissions
      tags:
        - Permission
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/PermissionViewModel"
  /roles:
    get:
      description: Returns a collection of roles
      tags:
        - Role
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/RoleViewModel"
    post:
      tags:
        - Role
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/RoleViewModel"
      responses:
        201:
          description: Role created
          headers:
            Location:
              description: A link to the Role
              type: string
              format: url
          schema:
            $ref: "#/definitions/RoleViewModel"
  /roles/{id}:
    get:
      tags:
        - Role
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Role to fetch
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/RoleViewModel'
        404:
          description: Role not found
    put:
      tags:
        - Role
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Role to update
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/RoleViewModel"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/RoleViewModel"
        404:
          description: Role not found
  /roles/{id}/delete:
    post:
      tags:
        - Role
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Role to delete
          required: true
          type: integer
      responses:
        200:
          description: OK
        404:
          description: Role not found
  /roles/{id}/permissions:
    get:
      description: Get all the permissions for a role
      tags:
        - Role
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Role to fetch
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/PermissionViewModel"
    put:
      description: Updates the permissions for a role
      tags:
        - Role
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Role to update
          required: true
          type: integer
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/PermissionViewModel"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/PermissionViewModel"
        404:
          description: Role not found
  /roles/{id}/users:
    get:
      description: Gets all the users for a role
      tags:
        - Role
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Role to fetch
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/UserRoleViewModel"
    put:
      description: Updates the users for a role
      tags:
        - Role
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Role to update
          required: true
          type: integer
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/UserRoleViewModel"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/UserRoleViewModel"
        404:
          description: Role not found
  /users:
    get:
      description: Returns all users
      tags:
        - User
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/UserViewModel"
        404:
           description: User not found
    post:
      description: Create new user
      tags:
        - User
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/UserViewModel"
      responses:
        201:
          description: User created
          headers:
            Location:
              description: A link to the User
              type: string
              format: url
          schema:
            $ref: "#/definitions/UserViewModel"
  /users/current:
    get:
      description: Get the currently logged in user
      tags:
        - CurrentUser
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/CurrentUserViewModel"
  /users/bulk:
    post:
      description: Adds a number of users
      tags:
        - User
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/UserViewModel"
      responses:
        200:
          description: OK
  /users/{id}:
    get:
      description: Returns data for a particular user
      tags:
        - User
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to fetch
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/UserViewModel"
        404:
           description: User not found
    put:
      description: Updates a user
      tags:
        - User
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to update
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/UserViewModel"
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/UserViewModel"
        404:
          description: User not found
  /users/{id}/delete:
    post:
      description: Deletes a user
      tags:
        - User
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to delete
          required: true
          type: integer
      responses:
        200:
          description: OK
        404:
          description: User not found
  /users/{id}/roles:
    get:
      description: Returns the roles for a user
      tags:
        - User
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to fetch
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/UserRoleViewModel"
        404:
           description: User not found
    post:
      description: Adds a role to a user
      tags:
        - User
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to update
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/UserRoleViewModel"
      responses:
        201:
          description: Role created for user
          headers:
            Location:
              description: A link to the User Role
              type: string
              format: url
          schema:
            $ref: "#/definitions/UserRoleViewModel"
    put:
      description: Updates the roles for a user
      tags:
        - User
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to update
          required: true
          type: integer
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/UserRoleViewModel"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/UserRoleViewModel"
        404:
          description: User not found
  /users/{id}/permissions:
    get:
      description: Returns the set of permissions for a user
      tags:
        - User
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to fetch
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/PermissionViewModel"
        404:
           description: User not found
  /users/{id}/groups:
    get:
      description: Returns all groups that a user is a member of
      tags:
        - User
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to fetch
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/GroupMembershipViewModel"
        404:
           description: User not found
    put:
      description: Updates the active set of groups for a user
      tags:
        - User
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to update
          required: true
          type: integer
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/GroupMembershipViewModel"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/GroupMembershipViewModel"
        404:
          description: User not found
  /users/{id}/favourites:
    get:
      description: Returns a user's favourites of a given context type
      tags:
        - User
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/UserFavouriteViewModel"
        "404":
           description: User not found
      parameters:
        - name: id
          in: path
          description: id of User to fetch favorites for
          required: true
          type: integer
  /users/{id}/notifications:
    get:
      description: Returns a user's notifications
      tags:
        - User
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/NotificationViewModel"
      parameters:
        - name: id
          in: path
          description: id of User to fetch notifications for
          required: true
          type: integer
  /regions:
    get:
      description: Returns a list of available regions
      tags:
        - Region
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Region'
    post:
      description: Adds a region
      tags:
        - Region
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Region"
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Region'
  /regions/bulk:
    post:
      description: Adds a number of regions.
      tags:
        - Region
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/Region"
      responses:
        '200':
          description: OK
  /regions/{id}:
    get:
      description: Returns a specific region
      tags:
        - Region
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Region'
      parameters:
        - name: id
          in: path
          description: id of Regions to fetch
          required: true
          type: integer
    put:
      description: Updates a region
      tags:
        - Region
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Region to update
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Region"
      responses:
        200:
          description: OK
        404:
          description: Region not found
  /regions/{id}/delete:
    post:
      description: Deletes a region
      tags:
        - Region
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Region to delete
          required: true
          type: integer
      responses:
        200:
          description: OK
        404:
          description: Region not found
  /regions/{id}/districts:
    get:
      description: Returns the districts for a specific region
      tags:
        - Region
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/District'
      parameters:
        - name: id
          in: path
          description: id of Region for which to fetch the Districts
          required: true
          type: integer
  /districts:
    get:
      description: Returns a list of available districts
      tags:
        - District
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/District'
    post:
      description: Adds a district
      tags:
        - District
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/District"
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/District'
  /districts/bulk:
    post:
      description: Adds a number of districts.
      tags:
        - District
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/District"
      responses:
        '200':
          description: OK
  /districts/{id}:
    get:
      description: Returns a specific district
      tags:
        - District
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/District'
      parameters:
        - name: id
          in: path
          description: id of Districts to fetch
          required: true
          type: integer
    put:
      description: Updates a district
      tags:
        - District
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of District to update
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/District"
      responses:
        200:
          description: OK
        404:
          description: District not found
  /districts/{id}/delete:
    post:
      description: Deletes a district
      tags:
        - District
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of District to delete
          required: true
          type: integer
      responses:
        200:
          description: OK
        404:
          description: District not found
  /districts/{id}/serviceareas:
    get:
      description: Returns the Service Areas for a specific region
      tags:
        - District
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ServiceArea'
      parameters:
        - name: id
          in: path
          description: id of District for which to fetch the ServiceAreas
          required: true
          type: integer
  /serviceareas:
    get:
      description: Returns a list of available districts
      tags:
        - ServiceArea
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ServiceArea'
    post:
      description: Adds a Service Area
      tags:
        - ServiceArea
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/ServiceArea"
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ServiceArea'
  /serviceareas/bulk:
    post:
      description: Adds a number of districts.
      tags:
        - ServiceArea
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/ServiceArea"
      responses:
        '200':
          description: OK
  /serviceareas/{id}:
    get:
      description: Returns a specific Service Area
      tags:
        - ServiceArea
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/ServiceArea'
      parameters:
        - name: id
          in: path
          description: id of Service Area to fetch
          required: true
          type: integer
    put:
      description: Updates a Service Area
      tags:
        - ServiceArea
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Service Area to update
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/ServiceArea"
      responses:
        200:
          description: OK
        404:
          description: Service Area not found
  /serviceareas/{id}/delete:
    post:
      description: Deletes a Service Area
      tags:
        - ServiceArea
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Service Area to delete
          required: true
          type: integer
      responses:
        200:
          description: OK
        404:
          description: Service Area not found
  /cities:
    get:
      description: Returns a list of cities
      tags:
        - City
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/City'
    post:
      description: Adds a City
      tags:
        - City
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/City"
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/City'
  /cities/bulk:
    post:
      description: Adds a number of cities
      tags:
        - City
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/City"
      responses:
        '200':
          description: OK
  /cities/{id}:
    get:
      description: Returns a specific City by ID
      tags:
        - City
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/City'
      parameters:
        - name: id
          in: path
          description: id of City to fetch
          required: true
          type: integer
    put:
      description: Updates a City
      tags:
        - City
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of City to update
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/City"
      responses:
        200:
          description: OK
        404:
          description: City not found
  /cities/{id}/delete:
    post:
      description: Deletes a City
      tags:
        - City
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of City to delete
          required: true
          type: integer
      responses:
        200:
          description: OK
        404:
          description: City not found

  /schooldistricts:
    get:
      description: Returns a list of available schooldistricts
      tags:
        - SchoolDistrict
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SchoolDistrict'
    post:
      description: Adds a school district
      tags:
        - SchoolDistrict
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolDistrict"
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SchoolDistrict'
  /schooldistricts/bulk:
    post:
      description: Adds a number of school districts.
      tags:
        - SchoolDistrict
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/SchoolDistrict"
      responses:
        '200':
          description: OK
  /schooldistricts/{id}:
    get:
      description: Returns a specific school district
      tags:
        - SchoolDistrict
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/SchoolDistrict'
      parameters:
        - name: id
          in: path
          description: id of School Districts to fetch
          required: true
          type: integer
    put:
      description: Updates a school district
      tags:
        - SchoolDistrict
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of School District to update
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolDistrict"
      responses:
        200:
          description: OK
        404:
          description: School District not found
  /schooldistricts/{id}/delete:
    post:
      description: Deletes a School District
      tags:
        - SchoolDistrict
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of School District to delete
          required: true
          type: integer
      responses:
        200:
          description: OK
        404:
          description: School District not found

definitions:
  SchoolBus:
    type: object
    description: The School Bus entity, including only information that is of specific interest to the School Bus inspector and not tracked in other systems such as ICBC or NSC
    required:
      - id
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
        x-type-options:
          min: 1
          max: 1000
      regi:
        type: string
        description: The ICBC Registration number for the School Bus
      plate:
        type: string
        description: The ICBC Plate Number for the School Bus
      VIN:
        type: string
        description: The VIN for the School Bus
      schoolBusOwner:
        $ref: '#/definitions/SchoolBusOwner'
      permitNumber:
        type: string
        description: The (generated) permit number for the School Bus. This will be added by the Inspector before the School Bus Permit can be printed and the bus can go into service.
      status:
        type: string
        description: Enumerated type of Status - Inactive, Active, Archived
      isOutOfProvince:
        type: boolean
      location:
        $ref: '#/definitions/ServiceArea'
      busLocationAddr1:
        type: string
        description: Address 1 of physical location of the School Bus.
      busLocationAddr2:
        type: string
        description: Address 2 of physical location of the School Bus.
      busLocationCity:
        $ref: '#/definitions/City'
        description: City of physical location of the School Bus.
      busLocationProv:
        type: string
        description: Province of physical location of the School Bus - free form.
      busLocationPostCode:
        type: string
        description: Postal Code of physical location of the School Bus.
      restrictions:
        type: string
        description: Text of any restrictions to be printed on the school bus permit.
      nextInspectionDate:
        type: string
        format: date-time
        description: The next inspection date for this School Bus. Set at the time an inspection is set.
      nextInspectionType:
        type: string
        description: An enumerated type (by the UI) to indicate the type of the next inspection - Annual or Re-inspection based on the Pass/Fail status of the most recent inspection.
      schoolBusDistrict:
        $ref: '#/definitions/SchoolDistrict'
        description: The School District in which the School Bus operates. The school bus may or may not be associated with the School District itself - we just track where it is regardless.
      isIndependentSchool:
        type: boolean
        description: True if the School Bus is associated with an Independent School. If true, the name of the Independent School should be in the companion field.
      nameOfIndependentSchool:
        type: string
        description: The name of the Independent School to which the School Bus is associated. Should be null if the companion isIndependentSchool is false.
      schoolBusClass:
        type: string
        description: The enumerated class of School Bus.
      schoolBusUnitNumber:
        type: string
        description: The unit number of the Bus as defined by the School Bus owner - freeform text.
      schoolBusSeatingCapacity:
        type: integer
        format: int32
        description: The maximum number of passengers in the bus based on the specific use of the bus. For example, the same 2-per seat / 24-passenger model might have a seating capacity of 36 if the specific bus is to be used for small children, 3 per seat.
      mobilityAidCapacity:
        type: integer
        format: int32
        description: The number of mobility aid passenger seats in the bus.
  SchoolBusNote:
    type: object
    required:
      - id
    description: Notes entered by users about a specific School Bus.
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
        x-type-options:
          min: 1
          max: 1000
      note:
        type: string
        description: The contents of the note.
      isNoLongerRelevant:
        type: boolean
        description: A user set flag that the note is no longer relevant. Allows the note to be retained for historical reasons, but identified to the user as no longer relevant.
      schoolBus:
          $ref: '#/definitions/SchoolBus'
  SchoolBusAttachment:
    type: object
    required:
      - id
    description: Attachments uploaded by users about a specific School Bus. Attachments are stored in the file system, with rows in this table pointing to the file system location of the attachment.
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
        x-type-options:
          min: 1
          max: 1000
      internalFileName:
        type: string
        description: The physical location of the attachment on the file system.
      externalFileName:
        type: string
        description: The name of the attachment as defined by the user in uploading the document.
      description:
        type: string
        description: A note about the attachment, optionally maintained by the user.
      schoolBus:
          $ref: '#/definitions/SchoolBus'
  SchoolBusHistory:
    type: object
    required:
      - id
    description: The history of updates made to a School Bus. Exact format of the history TBD.
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
        x-type-options:
          min: 1
          max: 1000
      schoolBus:
          $ref: '#/definitions/SchoolBus'
  SchoolBusOwner:
    type: object
    required:
      - id
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
        x-type-options:
          min: 1
          max: 1000
      name:
        type: string
        description: The name of the School Bus owner as defined by the user/Inspector. Not tied to the ICBC or NSC names, but whatever is most useful for the Inspectors.
      status:
        type: string
        description: Status of the School Bus owner - enumerated value Active, Archived
      dateCreated:
        type: string
        readOnly: true
        format: date-time
        description: The date-time of the creation of the record from the audit fields. Since this might be surfaced in the API, adding it to the definition.
      primaryContact:
        $ref: '#/definitions/SchoolBusOwnerContact'
        description: Link to the designated Primary Contact for the Inspector to the School Bus Owner organization.
      serviceArea:
        $ref: '#/definitions/ServiceArea'
        description: The District to which this School Bus is affliated.
      nextInspectionDate:
        type: string
        readOnly: true
        format: date-time
        description: The calculated next inspection date from across the School Buses associated with this School Bus Owner
      numberOfBuses:
        type: integer
        format: int32
        readOnly: true
        description: The calculated count of the number of School Buses associated with this School Bus Owner
  SchoolBusOwnerAttachment:
    type: object
    required:
      - id
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
        x-type-options:
          min: 1
          max: 1000
      schoolBusOwner:
          $ref: '#/definitions/SchoolBusOwner'
      internalFileName:
        type: string
        description: The physical location of the attachment on the file system.
      externalFileName:
        type: string
        description: The name of the attachment as defined by the user in uploading the document.
      description:
        type: string
        description: A note about the attachment, optionally maintained by the user.
  SchoolBusOwnerNote:
    type: object
    required:
      - id
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
        x-type-options:
          min: 1
          max: 1000
      isNoLongerRelevant:
        type: boolean
        description: A user set flag that the note is no longer relevant. Allows the note to be retained for historical reasons, but identified to the user as no longer relevant.
      note:
        type: string
        description: The contents of the note.
      schoolBusOwner:
          $ref: '#/definitions/SchoolBusOwner'
  SchoolBusOwnerContact:
    type: object
    required:
      - id
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
        x-type-options:
          min: 1
          max: 1000
      schoolBusOwner:
        $ref: '#/definitions/SchoolBusOwner'
      givenName:
        type: string
        description: The given name of the contact.
      surname:
        type: string
        description: The surname of the contact.
      role:
        type: string
        description: The role of the contact. UI controlled as to whether it is free form or selected from an enumerated list.
      notes:
        type: string
        description: Notes about the contact.
  SchoolBusOwnerContactPhone:
    type: object
    required:
      - id
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
        x-type-options:
          min: 1
          max: 1000
      type:
        type: string
        description: The type of the phone number. UI controlled as to whether it is free form or selected from an enumerated list.
      phoneNumber:
        type: string
        description: The phone number of the contact. Entered as free form to support a range of formats.
      schoolBusOwnerContact:
          $ref: '#/definitions/SchoolBusOwnerContact'
  SchoolBusOwnerContactAddress:
    type: object
    required:
      - id
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
        x-type-options:
          min: 1
          max: 1000
      type:
        type: string
        description: The type of the address. UI controlled as to whether it is free form or selected from an enumerated list.
      addr1:
        type: string
        description: Address 1 line of the address.
      addr2:
        type: string
        description: Address 2 line of the address.
      city:
        type: string
        description: The City of the address.
      province:
        type: string
        description: The Province of the address.
      postalCode:
        type: string
        description: The postal code of the address.
      schoolBusOwnerContact:
          $ref: '#/definitions/SchoolBusOwnerContact'
  SchoolBusOwnerHistory:
    type: object
    required:
      - id
    description: The history of updates made to a School Bus. Exact format of the history TBD.
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
        x-type-options:
          min: 1
          max: 1000
      schoolBusOwner:
          $ref: '#/definitions/SchoolBusOwner'
  CCWData:
    type: object
    required:
      - id
    description: Data pulled in from external sources (ICBC, NSC, etc) about School Buses and retained but not updated in the School Bus app. All data elements are simply copied from the comparable fields in the WSDLs of the Web Service Calls.
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
        x-type-options:
          min: 1
          max: 1000
      ICBCRegi:
        type: string
        description: The Registration Number (Regi) is the link between the CCW information and a specific School Bus
      ICBCModelYear:
        format:  int32
        type: integer
        description: Vehicle Year
        x-type-options:
          min: 1970
          max: 2017
      ICBCVehicleType:
        type: string
      ICBCRateClass:
        type: string
      ICBCCVIPDecal:
        type: string
      ICBCFleetUnitNo:
        type: integer
      ICBCGrossVehicleWeight:
        type: integer
      ICBCMake:
        type: string
      ICBCBody:
        type: string
      ICBCRebuiltStatus:
        type: string
      ICBCCVIPExpiry:
        type: string
        format: date-time
      ICBCNetWt:
        type: integer
      ICBCModel:
        type: string
      ICBCFuel:
        type: string
      ICBCSeatingCapacity:
        type: integer
      ICBCColour:
        type: string
      ICBCNotesAndOrders:
        type: string
      ICBCOrderedOn:
        type: string
        format: date-time
      ICBCRegOwnerName:
        type: string
      ICBCRegOwnerAddr1:
        type: string
      ICBCRegOwnerAddr2:
        type: string
      ICBCRegOwnerCity:
        type: string
      ICBCRegOwnerProv:
        type: string
      ICBCRegOwnerPostalCode:
        type: string
      ICBCRegOwnerStatus:
        type: string
      ICBCRegOwnerRODL:
        type: string
      ICBCRegOwnerPool:
        type: string
      NSCClientNum:
        type: string
      NSCCarrierName:
        type: string
      NSCCarrierConditions:
        type: string
      NSCCarrierSafetyRating:
        type: string
      NSCPolicyNumber:
        type: string
      NSCPolicyEffectiveDate:
        type: string
        format: date-time
      NSCPolicyStatusDate:
        type: string
        format: date-time
      NSCPolicyExpiryDate:
        type: string
        format: date-time
      NSCPolicyStatus:
        type: string
      NSCPlateDecal:
        type: string
  Inspection:
    required:
      - id
    type: object
    properties:
      id:
          format: int32
          type: integer
          description: Primary Key make this match the Inspection Details page
          x-type-options:
            min: 1
            max: 1000
      schoolBus:
        $ref: '#/definitions/SchoolBus'
      inspector:
        $ref: '#/definitions/User'
        description: Defaults for a new inspection to the current user, but can be changed as needed.
      inspectionDate:
        type: string
        format: date-time
        description: The date the inspection was conducted.
      inspectionResult:
        type: string
        description: The result of the inspection - enumerated type of Passed or Failed. The detailed results of the inspection are in RIP and not duplicated here.
      notes:
        type: string
        description: A note about the inspection independent of what goes into the RIP inspection - this is just for the School Bus application.
      restrictions:
        type: string
        readOnly: true
        description: The "Restrictions" text from the School Bus record. This is visible on the Inspections screen as a convenience for adjusting it prior to printing the Permit Page.
      RIPInspectionId:
        type: string
        description: The ID of the RIP inspection. The expectation is that the user will manually enter a RIP ID such that an external URL can be formed to allow the user to open the RIP inspection and see the inspection details.
  FavouriteContextType:
    type: object
    required:
      - id
    description: The name for a place in the UI where per user settings can be stored - for example, the School Bus search screen, School Bus Owner search screen, etc.
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
        x-type-options:
          min: 1
          max: 1000
      name:
        type: string
        description:  Context Name known by the UI.
        x-chance-type: name
  UserFavourite:
    type: object
    required:
      - id
    description: User specific settings for a specific location in the UI. The location and saved settings are internally defined by the UI.
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
        x-type-options:
          min: 1
          max: 1000
      name:
        type: string
        description:  The user-defined name for the recorded settings. Allows the user to save different groups of settings and access each one easily when needed.
        x-chance-type: name
      value:
        type: string
        description:  The settings saved by the user. In general, a UI defined chunk of json that stores the settings in place when the user created the favourite.
      isDefault:
        type: boolean
        description: True if this Favourite is the default for this Context Type. On first access to a context in a session the default favourite for the context it is invoked. If there is no default favourite, a system-wide default is invoked. On return to the context within a session, the last parameters used are reapplied.
      favouriteContextType:
        $ref: '#/definitions/FavouriteContextType'
  Region:
    type: object
    required:
      - id
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
        x-type-options:
          min: 1
          max: 1000
      ministryRegionID:
        type: integer
        format: int32
        description: The Ministry ID for the Region
        x-type-options:
          min: 1
          max: 1000
      name:
        type: string
        description: The name of the Region
      startDate:
        type: string
        format: date-time
        description: The effective date of the Region - NOT CURRENTLY ENFORCED IN SCHOOL BUS
      endDate:
        type: string
        format: date-time
        description: The end date of the Region; null if active - NOT CURRENTLY ENFORCED IN SCHOOL BUS
  District:
    type: object
    required:
      - id
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
        x-type-options:
          min: 1
          max: 1000
      ministryDistrictID:
        type: integer
        format: int32
        description: The Ministry ID for the District
        x-type-options:
          min: 1
          max: 1000
      name:
        type: string
        description: The name of the District
      region:
        $ref: '#/definitions/Region'
        description: The region in which the District is found.
      startDate:
        type: string
        format: date-time
        description: The effective date of the District ID - NOT CURRENTLY ENFORCED IN SCHOOL BUS
      endDate:
        type: string
        format: date-time
        description: The end date of the District; null if active - NOT CURRENTLY ENFORCED IN SCHOOL BUS
  ServiceArea:
    type: object
    required:
      - id
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
        x-type-options:
          min: 1
          max: 1000
      ministryServiceAreaID:
        type: integer
        format: int32
        description: The Ministry ID for the Service Area
        x-type-options:
          min: 1
          max: 1000
      name:
        type: string
        description: The name of the Service Area
      district:
        $ref: '#/definitions/District'
        description: The district in which the Service Area is found.
      startDate:
        type: string
        format: date-time
        description: The effective date of the Service Area - NOT CURRENTLY ENFORCED IN SCHOOL BUS
      endDate:
        type: string
        format: date-time
        description: The end date of the Service Area; null if active - NOT CURRENTLY ENFORCED IN SCHOOL BUS
  SchoolDistrict:
    type: object
    description: A list of School Districts in the Province of BC. Authoritative source to be determined.
    required:
      - id
    properties:
      id:
          format: int32
          type: integer
          description: Primary Key
          x-type-options:
            min: 1
            max: 1000
      name:
          format: string
          description:  The full name of the School District
          x-chance-type: name
      shortName:
          format: string
          description: A short name for the School District useful in some areas of the UI. Usually with format "SD 61".
  City:
    type: object
    description: A list of cities in BC. Authoritative source to be determined.
    required:
      - id
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
        x-type-options:
          min: 1
          max: 1000
      city:
        type: string
        description: The name of the City
  Notification:
    type: object
    required:
      - id
    properties:
      id:
          format: int32
          type: integer
          description: Primary Key
          x-type-options:
            min: 1
            max: 1000
      event:
          $ref: '#/definitions/NotificationEvent'
      event2:
          $ref: '#/definitions/NotificationEvent'
      hasBeenViewed:
        type: boolean
      isWatchNotification:
        type: boolean
      isExpired:
        type: boolean
      isAllDay:
        type: boolean
      priorityCode:
        type: string
      user:
        $ref: '#/definitions/User'
  NotificationEvent:
    type: object
    required:
      - id
    properties:
      id:
          format: int32
          type: integer
          description: Primary Key
          x-type-options:
            min: 1
            max: 1000
      eventTime:
        type: string
        format: datetime
      eventTypeCode:
        type: string
      eventSubTypeCode:
        type: string
      notes:
        type: string
      notificationGenerated:
        type: boolean
      schoolBus:
        $ref: '#/definitions/SchoolBus'
  User:
    type: object
    required:
      - id
      - active
    description: Information about the users of the system.
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
        x-type-options:
          min: 1
          max: 1000
      givenName:
        type: string
        x-chance-type: name
      surname:
        type: string
        x-chance-type: name
      initials:
        type: string
      email:
        type: string
        x-chance-type: email
      active:
        type: boolean
      smUserId:
        type: string
        description: Security Manager User ID
        x-chance-type: name
      guid:
        type: string
      smAuthorizationDirectory:
        type: string
      userRoles:
        type: array
        items:
          $ref: '#/definitions/UserRole'
      groupMemberships:
        type: array
        items:
          $ref: '#/definitions/GroupMembership'
  UserRole:
    type: object
    required:
      - id
      - effectiveDate
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
        x-type-options:
          min: 1
          max: 1000
      effectiveDate:
        type: string
        format: date-time
      expiryDate:
        type: string
        format: date-time
      user:
        $ref: '#/definitions/User'
      role:
        $ref: '#/definitions/Role'
  Role:
    type: object
    required:
      - id
      - name
      - description
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
        x-type-options:
          min: 1
          max: 1000
      name:
        type: string
        x-chance-type: name
      description:
        type: string
        x-chance-type: sentence
      rolePermissions:
        type: array
        items:
          $ref: '#/definitions/RolePermission'
      userRoles:
        type: array
        items:
          $ref: '#/definitions/UserRole'
  RolePermission:
    type: object
    required:
      - id
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
        x-type-options:
          min: 1
          max: 1000
      role:
        $ref: '#/definitions/Role'
      permission:
        $ref: '#/definitions/Permission'
  Permission:
    type: object
    required:
      - id
      - code
      - name
      - description
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
        x-type-options:
          min: 1
          max: 1000
      code:
        type: string
      name:
        type: string
        x-chance-type: name
      description:
        type: string
        x-chance-type: sentence
  GroupMembership:
    type: object
    required:
      - id
      - active
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
        x-type-options:
          min: 1
          max: 1000
      active:
        type: boolean
      group:
        $ref: '#/definitions/Group'
      user:
        $ref: '#/definitions/User'
  Group:
    type: object
    required:
      - id
      - name
      - description
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
        x-type-options:
          min: 1
          max: 1000
      name:
        type: string
        x-chance-type: name
      description:
        type: string
        x-chance-type: sentence
  UserViewModel:
    type: object
    x-codegen-viewmodel: true
    required:
      - id
      - active
    properties:
      id:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
      givenName:
        type: string
        x-chance-type: name
      surname:
        type: string
        x-chance-type: name
      initials:
        type: string
      email:
        type: string
        x-chance-type: email
      active:
        type: boolean
  CurrentUserViewModel:
    type: object
    x-codegen-viewmodel: true
    properties:
      givenName:
        type: string
        x-chance-type: name
      surname:
        type: string
        x-chance-type: name
      fullName:        
        type: string
      districtName:
        type: string
      overdueInspections:
        format: int32
        type: integer
      scheduledInspections:
        format: int32
        type: integer
      dueNextMonthInspections:
        format: int32
        type: integer                
  UserDetailsViewModel:
    type: object
    x-codegen-viewmodel: true
    required:
      - id
      - active
    properties:
      id:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
      givenName:
        type: string
        x-chance-type: name
      surname:
        type: string
        x-chance-type: name
      initials:
        type: string
      email:
        type: string
        x-chance-type: email
      active:
        type: boolean
      permissions:
        type: array
        items:
          $ref: '#/definitions/PermissionViewModel'
  UserRoleViewModel:
    type: object
    x-codegen-viewmodel: true
    required:
      - effectiveDate
      - userId
      - roleId
    properties:
      id:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
      effectiveDate:
        type: string
        format: date-time
      expiryDate:
        type: string
        format: date-time
      userId:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
      roleId:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
  RoleViewModel:
    type: object
    x-codegen-viewmodel: true
    required:
      - id
      - name
      - description
    properties:
      id:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
      name:
        type: string
        x-chance-type: name
      description:
        type: string
        x-chance-type: sentence
  RolePermissionViewModel:
    type: object
    x-codegen-viewmodel: true
    required:
      - roleId
      - permissionId
    properties:
      id:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
      roleId:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
      permissionId:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
  PermissionViewModel:
    type: object
    x-codegen-viewmodel: true
    required:
      - code
      - name
      - description
    properties:
      code:
        type: string
      name:
        type: string
        x-chance-type: name
      description:
        type: string
        x-chance-type: sentence
  GroupMembershipViewModel:
    type: object
    x-codegen-viewmodel: true
    required:
      - active
      - userId
      - groupId
    properties:
      id:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
      active:
        type: boolean
      groupId:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
      userId:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
  GroupViewModel:
    type: object
    x-codegen-viewmodel: true
    required:
      - name
      - description
    properties:
      id:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
      name:
        type: string
        x-chance-type: name
      description:
        type: string
        x-chance-type: sentence
  UserFavouriteViewModel:
    type: object
    properties:
      id:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
      name:
        type: string
        description:  Context Name
        x-chance-type: name
      value:
        type: string
        description:  Saved search
        x-chance-type: word
      isDefault:
        type: boolean
      favouriteContextTypeId:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
  NotificationViewModel:
    type: object
    properties:
      id:
          format: int32
          type: integer
          x-type-options:
            min: 1
            max: 1000
      eventId:
          format: int32
          type: integer
          x-type-options:
            min: 1
            max: 1000
      event2Id:
          format: int32
          type: integer
          x-type-options:
            min: 1
            max: 1000
      hasBeenViewed:
        type: boolean
      isWatchNotification:
        type: boolean
      isExpired:
        type: boolean
      isAllDay:
        type: boolean
      priorityCode:
        type: string
      userId:
          format: int32
          type: integer
          x-type-options:
            min: 1
            max: 1000
securityDefinitions: {}
