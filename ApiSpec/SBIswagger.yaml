swagger: '2.0'
info:
  version: v1
  title: REST API Documentation for the MOTI School Bus Application
  description: The School Bus application tracks that inspections are performed in a timely fashion. For each school bus the application tracks information about the bus (including data from ICBC, NSC, etc.), it's past and next inspection dates and results, contacts, and the inspector responsible for next inspecting the bus.
  termsOfService: N/A
basePath: /api
paths:
  /ccwdata:
    get:
      tags:
        - CCWData
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/CCWData"
      deprecated: false'
    post:
      tags:
        - CCWData
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/CCWData"
      responses:
        201:
          description: CCWData record created
          headers:
            Location:
              description: A link to the CCWData
              type: string
              format: url
          schema:
            $ref: "#/definitions/CCWData"
  /ccwdata/bulk:
    post:
      tags:
        - CCWData
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/CCWData"
      responses:
        201:
          description: CCWData records created
  /ccwdata/{id}:
    get:
      tags:
        - CCWData
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/CCWData"
        404:
          description: CCWData not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of CCWData record to fetch
          required: true
          type: integer
    put:
      tags:
        - CCWData
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/CCWData"
        404:
          description: CCWData not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of CCWData to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/CCWData"
  /ccwdata/{id}/delete:
    post:
      tags:
        - CCWData
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: CCWData record not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of Owner record to delete
          required: true
          type: integer
  /inspections:
    get:
      tags:
        - Inspection
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Inspection"
      deprecated: false'
    post:
      tags:
        - Inspection
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Inspection"
      responses:
        201:
          description: Inspection record created
          headers:
            Location:
              description: A link to the Inspection
              type: string
              format: url
          schema:
            $ref: "#/definitions/Inspection"
  /inspections/bulk:
    post:
      tags:
        - Inspection
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/Inspection"
      responses:
        201:
          description: Inspection records created
  /inspections/{id}:
    get:
      tags:
        - Inspection
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Inspection"
        404:
          description: Inspection not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of Inspection record to fetch
          required: true
          type: integer
    put:
      tags:
        - Inspection
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Inspection"
        404:
          description: Inspection not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of Inspection to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Inspection"
  /inspections/{id}/delete:
    post:
      tags:
        - Inspection
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: Inspection record not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of Owner record to delete
          required: true
          type: integer
  /schoolbuses:
    get:
      tags:
        - SchoolBus
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/SchoolBus"
      deprecated: false'
    post:
      tags:
        - SchoolBus
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolBus"
      responses:
        201:
          description: SchoolBus record created
          headers:
            Location:
              description: A link to the SchoolBus
              type: string
              format: url
          schema:
            $ref: "#/definitions/SchoolBus"
  /schoolbuses/bulk:
    post:
      tags:
        - SchoolBus
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/SchoolBus"
      responses:
        201:
          description: SchoolBus records created
  /schoolbuses/{id}:
    get:
      tags:
        - SchoolBus
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/SchoolBus"
        404:
          description: SchoolBus not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBus record to fetch
          required: true
          type: integer
    put:
      tags:
        - SchoolBus
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/SchoolBus"
        404:
          description: SchoolBus not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBus to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolBus"
  /schoolbuses/{id}/delete:
    post:
      tags:
        - SchoolBus
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: SchoolBus record not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of Owner record to delete
          required: true
          type: integer
  /schoolbusnotes:
    get:
      tags:
        - SchoolBusNote
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/SchoolBusNote"
      deprecated: false'
    post:
      tags:
        - SchoolBusNote
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolBusNote"
      responses:
        201:
          description: SchoolBusNote record created
          headers:
            Location:
              description: A link to the SchoolBusNote
              type: string
              format: url
          schema:
            $ref: "#/definitions/SchoolBusNote"
  /schoolbusnotes/bulk:
    post:
      tags:
        - SchoolBusNote
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/SchoolBusNote"
      responses:
        201:
          description: SchoolBusNote records created
  /schoolbusnotes/{id}:
    get:
      tags:
        - SchoolBusNote
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/SchoolBusNote"
        404:
          description: SchoolBusNote not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusNote record to fetch
          required: true
          type: integer
    put:
      tags:
        - SchoolBusNote
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/SchoolBusNote"
        404:
          description: SchoolBusNote not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusNote to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolBusNote"
  /schoolbusnotes/{id}/delete:
    post:
      tags:
        - SchoolBusNote
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: SchoolBusNote record not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of Owner record to delete
          required: true
          type: integer
  /schoolbusattachments:
    get:
      tags:
        - SchoolBusAttachment
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/SchoolBusAttachment"
      deprecated: false'
    post:
      tags:
        - SchoolBusAttachment
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolBusAttachment"
      responses:
        201:
          description: SchoolBusAttachment record created
          headers:
            Location:
              description: A link to the SchoolBusAttachment
              type: string
              format: url
          schema:
            $ref: "#/definitions/SchoolBusAttachment"
  /schoolbusattachments/bulk:
    post:
      tags:
        - SchoolBusAttachment
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/SchoolBusAttachment"
      responses:
        201:
          description: SchoolBusAttachment records created
  /schoolbusattachments/{id}:
    get:
      tags:
        - SchoolBusAttachment
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/SchoolBusAttachment"
        404:
          description: SchoolBusAttachment not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusAttachment record to fetch
          required: true
          type: integer
    put:
      tags:
        - SchoolBusAttachment
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/SchoolBusAttachment"
        404:
          description: SchoolBusAttachment not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusAttachment to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolBusAttachment"
  /schoolbusattachments/{id}/delete:
    post:
      tags:
        - SchoolBusAttachment
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: SchoolBusAttachment record not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of Owner record to delete
          required: true
          type: integer
  /schoolbushistories:
    get:
      tags:
        - SchoolBusHistory
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/SchoolBusHistory"
      deprecated: false'
    post:
      tags:
        - SchoolBusHistory
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolBusHistory"
      responses:
        201:
          description: SchoolBusHistory record created
          headers:
            Location:
              description: A link to the SchoolBusHistory
              type: string
              format: url
          schema:
            $ref: "#/definitions/SchoolBusHistory"
  /schoolbushistories/bulk:
    post:
      tags:
        - SchoolBusHistory
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/SchoolBusHistory"
      responses:
        201:
          description: SchoolBusHistory records created
  /schoolbushistories/{id}:
    get:
      tags:
        - SchoolBusHistory
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/SchoolBusHistory"
        404:
          description: SchoolBusHistory not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusHistory record to fetch
          required: true
          type: integer
    put:
      tags:
        - SchoolBusHistory
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/SchoolBusHistory"
        404:
          description: SchoolBusHistory not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusHistory to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolBusHistory"
  /schoolbushistories/{id}/delete:
    post:
      tags:
        - SchoolBusHistory
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: SchoolBusHistory record not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of Owner record to delete
          required: true
          type: integer
  /notifications:
    get:
      tags:
        - Notification
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Notification"
      deprecated: false'
    post:
      tags:
        - Notification
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Notification"
      responses:
        201:
          description: Notification record created
          headers:
            Location:
              description: A link to the Notification
              type: string
              format: url
          schema:
            $ref: "#/definitions/Notification"
  /notifications/bulk:
    post:
      tags:
        - Notification
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/Notification"
      responses:
        201:
          description: Notification records created
  /notifications/{id}:
    get:
      tags:
        - Notification
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Notification"
        404:
          description: Notification not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of Notification record to fetch
          required: true
          type: integer
    put:
      tags:
        - Notification
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Notification"
        404:
          description: Notification not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of Notification to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Notification"
  /notifications/{id}/delete:
    post:
      tags:
        - Notification
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: Notification record not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of Owner record to delete
          required: true
          type: integer
  /notificationevents:
    get:
      tags:
        - NotificationEvent
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/NotificationEvent"
      deprecated: false'
    post:
      tags:
        - NotificationEvent
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/NotificationEvent"
      responses:
        201:
          description: NotificationEvent record created
          headers:
            Location:
              description: A link to the NotificationEvent
              type: string
              format: url
          schema:
            $ref: "#/definitions/NotificationEvent"
  /notificationevents/bulk:
    post:
      tags:
        - NotificationEvent
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/NotificationEvent"
      responses:
        201:
          description: NotificationEvent records created
  /notificationevents/{id}:
    get:
      tags:
        - NotificationEvent
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/NotificationEvent"
        404:
          description: NotificationEvent not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of NotificationEvent record to fetch
          required: true
          type: integer
    put:
      tags:
        - NotificationEvent
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/NotificationEvent"
        404:
          description: NotificationEvent not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of NotificationEvent to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/NotificationEvent"
  /notificationevents/{id}/delete:
    post:
      tags:
        - NotificationEvent
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: NotificationEvent record not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of Owner record to delete
          required: true
          type: integer
  /schoolbusowners:
    get:
      tags:
        - SchoolBusOwner
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/SchoolBusOwner"
      deprecated: false'
    post:
      tags:
        - SchoolBusOwner
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolBusOwner"
      responses:
        201:
          description: SchoolBusOwner record created
          headers:
            Location:
              description: A link to the SchoolBusOwner
              type: string
              format: url
          schema:
            $ref: "#/definitions/SchoolBusOwner"
  /schoolbusowners/bulk:
    post:
      tags:
        - SchoolBusOwner
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/SchoolBusOwner"
      responses:
        201:
          description: SchoolBusOwner records created
  /schoolbusowners/{id}:
    get:
      tags:
        - SchoolBusOwner
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/SchoolBusOwner"
        404:
          description: SchoolBusOwner not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwner record to fetch
          required: true
          type: integer
    put:
      tags:
        - SchoolBusOwner
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/SchoolBusOwner"
        404:
          description: SchoolBusOwner not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwner to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolBusOwner"
  /schoolbusowners/{id}/delete:
    post:
      tags:
        - SchoolBusOwner
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: SchoolBusOwner record not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of Owner record to delete
          required: true
          type: integer
  /schoolbusownernotes:
    get:
      tags:
        - SchoolBusOwnerNote
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/SchoolBusOwnerNote"
      deprecated: false'
    post:
      tags:
        - SchoolBusOwnerNote
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolBusOwnerNote"
      responses:
        201:
          description: SchoolBusOwnerNote record created
          headers:
            Location:
              description: A link to the SchoolBusOwnerNote
              type: string
              format: url
          schema:
            $ref: "#/definitions/SchoolBusOwnerNote"
  /schoolbusownernotes/bulk:
    post:
      tags:
        - SchoolBusOwnerNote
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/SchoolBusOwnerNote"
      responses:
        201:
          description: SchoolBusOwnerNote records created
  /schoolbusownernotes/{id}:
    get:
      tags:
        - SchoolBusOwnerNote
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/SchoolBusOwnerNote"
        404:
          description: SchoolBusOwnerNote not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwnerNote record to fetch
          required: true
          type: integer
    put:
      tags:
        - SchoolBusOwnerNote
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/SchoolBusOwnerNote"
        404:
          description: SchoolBusOwnerNote not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwnerNote to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolBusOwnerNote"
  /schoolbusownernotes/{id}/delete:
    post:
      tags:
        - SchoolBusOwnerNote
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: SchoolBusOwnerNote record not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of Owner record to delete
          required: true
          type: integer
  /schoolbusownerattachments:
    get:
      tags:
        - SchoolBusOwnerAttachment
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/SchoolBusOwnerAttachment"
      deprecated: false'
    post:
      tags:
        - SchoolBusOwnerAttachment
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolBusOwnerAttachment"
      responses:
        201:
          description: SchoolBusOwnerAttachment record created
          headers:
            Location:
              description: A link to the SchoolBusOwnerAttachment
              type: string
              format: url
          schema:
            $ref: "#/definitions/SchoolBusOwnerAttachment"
  /schoolbusownerattachments/bulk:
    post:
      tags:
        - SchoolBusOwnerAttachment
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/SchoolBusOwnerAttachment"
      responses:
        201:
          description: SchoolBusOwnerAttachment records created
  /schoolbusownerattachments/{id}:
    get:
      tags:
        - SchoolBusOwnerAttachment
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/SchoolBusOwnerAttachment"
        404:
          description: SchoolBusOwnerAttachment not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwnerAttachment record to fetch
          required: true
          type: integer
    put:
      tags:
        - SchoolBusOwnerAttachment
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/SchoolBusOwnerAttachment"
        404:
          description: SchoolBusOwnerAttachment not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwnerAttachment to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolBusOwnerAttachment"
  /schoolbusownerattachments/{id}/delete:
    post:
      tags:
        - SchoolBusOwnerAttachment
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: SchoolBusOwnerAttachment record not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of Owner record to delete
          required: true
          type: integer
  /schoolbusownercontacts:
    get:
      tags:
        - SchoolBusOwnerContact
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/SchoolBusOwnerContact"
      deprecated: false'
    post:
      tags:
        - SchoolBusOwnerContact
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolBusOwnerContact"
      responses:
        201:
          description: SchoolBusOwnerContact record created
          headers:
            Location:
              description: A link to the SchoolBusOwnerContact
              type: string
              format: url
          schema:
            $ref: "#/definitions/SchoolBusOwnerContact"
  /schoolbusownercontacts/bulk:
    post:
      tags:
        - SchoolBusOwnerContact
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/SchoolBusOwnerContact"
      responses:
        201:
          description: SchoolBusOwnerContact records created
  /schoolbusownercontacts/{id}:
    get:
      tags:
        - SchoolBusOwnerContact
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/SchoolBusOwnerContact"
        404:
          description: SchoolBusOwnerContact not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwnerContact record to fetch
          required: true
          type: integer
    put:
      tags:
        - SchoolBusOwnerContact
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/SchoolBusOwnerContact"
        404:
          description: SchoolBusOwnerContact not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwnerContact to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolBusOwnerContact"
  /schoolbusownercontacts/{id}/delete:
    post:
      tags:
        - SchoolBusOwnerContact
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: SchoolBusOwnerContact record not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of Owner record to delete
          required: true
          type: integer
  /schoolbusownerhistory:
    get:
      tags:
        - SchoolBusOwnerHistory
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/SchoolBusOwnerHistory"
      deprecated: false'
    post:
      tags:
        - SchoolBusOwnerHistory
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolBusOwnerHistory"
      responses:
        201:
          description: SchoolBusOwnerHistory record created
          headers:
            Location:
              description: A link to the SchoolBusOwnerHistory
              type: string
              format: url
          schema:
            $ref: "#/definitions/SchoolBusOwnerHistory"
  /schoolbusownerhistory/bulk:
    post:
      tags:
        - SchoolBusOwnerHistory
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/SchoolBusOwnerHistory"
      responses:
        201:
          description: SchoolBusOwnerHistory records created
  /schoolbusownerhistory/{id}:
    get:
      tags:
        - SchoolBusOwnerHistory
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/SchoolBusOwnerHistory"
        404:
          description: SchoolBusOwnerHistory not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwnerHistory record to fetch
          required: true
          type: integer
    put:
      tags:
        - SchoolBusOwnerHistory
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/SchoolBusOwnerHistory"
        404:
          description: SchoolBusOwnerHistory not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwnerHistory to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolBusOwnerHistory"
  /schoolbusownerhistory/{id}/delete:
    post:
      tags:
        - SchoolBusOwnerHistory
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: SchoolBusOwnerHistory record not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of Owner record to delete
          required: true
          type: integer
  /schoolBusOwnerContactPhone:
    get:
      tags:
        - SchoolBusOwnerContactPhone
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/SchoolBusOwnerContactPhone"
      deprecated: false'
    post:
      tags:
        - SchoolBusOwnerContactPhone
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolBusOwnerContactPhone"
      responses:
        201:
          description: SchoolBusOwnerContactPhone record created
          headers:
            Location:
              description: A link to the SchoolBusOwnerContactPhone
              type: string
              format: url
          schema:
            $ref: "#/definitions/SchoolBusOwnerContactPhone"
  /schoolBusOwnerContactPhone/bulk:
    post:
      tags:
        - SchoolBusOwnerContactPhone
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/SchoolBusOwnerContactPhone"
      responses:
        201:
          description: SchoolBusOwnerContactPhone records created
  /schoolBusOwnerContactPhone/{id}:
    get:
      tags:
        - SchoolBusOwnerContactPhone
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/SchoolBusOwnerContactPhone"
        404:
          description: SchoolBusOwnerContactPhone not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwnerContactPhone record to fetch
          required: true
          type: integer
    put:
      tags:
        - SchoolBusOwnerContactPhone
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/SchoolBusOwnerContactPhone"
        404:
          description: SchoolBusOwnerContactPhone not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwnerContactPhone to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolBusOwnerContactPhone"
  /schoolBusOwnerContactPhone/{id}/delete:
    post:
      tags:
        - SchoolBusOwnerContactPhone
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: SchoolBusOwnerContactPhone record not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of Owner record to delete
          required: true
          type: integer
  /schoolBusOwnerContactAddress:
    get:
      tags:
        - SchoolBusOwnerContactAddress
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/SchoolBusOwnerContactAddress"
      deprecated: false'
    post:
      tags:
        - SchoolBusOwnerContactAddress
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolBusOwnerContactAddress"
      responses:
        201:
          description: SchoolBusOwnerContactAddress record created
          headers:
            Location:
              description: A link to the SchoolBusOwnerContactAddress
              type: string
              format: url
          schema:
            $ref: "#/definitions/SchoolBusOwnerContactAddress"
  /schoolBusOwnerContactAddress/bulk:
    post:
      tags:
        - SchoolBusOwnerContactAddress
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/SchoolBusOwnerContactAddress"
      responses:
        201:
          description: SchoolBusOwnerContactAddress records created
  /schoolBusOwnerContactAddress/{id}:
    get:
      tags:
        - SchoolBusOwnerContactAddress
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/SchoolBusOwnerContactAddress"
        404:
          description: SchoolBusOwnerContactAddress not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwnerContactAddress record to fetch
          required: true
          type: integer
    put:
      tags:
        - SchoolBusOwnerContactAddress
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/SchoolBusOwnerContactAddress"
        404:
          description: SchoolBusOwnerContactAddress not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwnerContactAddress to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolBusOwnerContactAddress"
  /schoolBusOwnerContactAddress/{id}/delete:
    post:
      tags:
        - SchoolBusOwnerContactAddress
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: SchoolBusOwnerContactAddress record not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of Owner record to delete
          required: true
          type: integer
  /favouritecontexttypes:
    get:
      tags:
        - FavouriteContextType
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/FavouriteContextType"
      deprecated: false'
    post:
      tags:
        - FavouriteContextType
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/FavouriteContextType"
      responses:
        201:
          description: FavouriteContextType record created
          headers:
            Location:
              description: A link to the FavouriteContextType
              type: string
              format: url
          schema:
            $ref: "#/definitions/FavouriteContextType"
  /favouritecontexttypes/bulk:
    post:
      tags:
        - FavouriteContextType
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/FavouriteContextType"
      responses:
        201:
          description: FavouriteContextType records created
  /favouritecontexttypes/{id}:
    get:
      tags:
        - FavouriteContextType
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/FavouriteContextType"
        404:
          description: FavouriteContextType not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of FavouriteContextType record to fetch
          required: true
          type: integer
    put:
      tags:
        - FavouriteContextType
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/FavouriteContextType"
        404:
          description: FavouriteContextType not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of FavouriteContextType to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/FavouriteContextType"
  /favouritecontexttypes/{id}/delete:
    post:
      tags:
        - FavouriteContextType
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: FavouriteContextType record not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of Owner record to delete
          required: true
          type: integer
  /groups:
    get:
      tags:
        - Group
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Group"
      deprecated: false'
    post:
      tags:
        - Group
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Group"
      responses:
        201:
          description: Group record created
          headers:
            Location:
              description: A link to the Group
              type: string
              format: url
          schema:
            $ref: "#/definitions/Group"
  /groups/bulk:
    post:
      tags:
        - Group
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/Group"
      responses:
        201:
          description: Group records created
  /groups/{id}:
    get:
      tags:
        - Group
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Group"
        404:
          description: Group not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of Group record to fetch
          required: true
          type: integer
    put:
      tags:
        - Group
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Group"
        404:
          description: Group not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of Group to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Group"
  /groups/{id}/delete:
    post:
      tags:
        - Group
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: Group record not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of Owner record to delete
          required: true
          type: integer
  /permissions:
    get:
      tags:
        - Permission
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Permission"
      deprecated: false'
    post:
      tags:
        - Permission
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Permission"
      responses:
        201:
          description: Permission record created
          headers:
            Location:
              description: A link to the Permission
              type: string
              format: url
          schema:
            $ref: "#/definitions/Permission"
  /permissions/bulk:
    post:
      tags:
        - Permission
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/Permission"
      responses:
        201:
          description: Permission records created
  /permissions/{id}:
    get:
      tags:
        - Permission
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Permission"
        404:
          description: Permission not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of Permission record to fetch
          required: true
          type: integer
    put:
      tags:
        - Permission
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Permission"
        404:
          description: Permission not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of Permission to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Permission"
  /permissions/{id}/delete:
    post:
      tags:
        - Permission
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: Permission record not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of Owner record to delete
          required: true
          type: integer
  /roles:
    get:
      tags:
        - Role
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Role"
      deprecated: false'
    post:
      tags:
        - Role
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Role"
      responses:
        201:
          description: Role record created
          headers:
            Location:
              description: A link to the Role
              type: string
              format: url
          schema:
            $ref: "#/definitions/Role"
  /roles/bulk:
    post:
      tags:
        - Role
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/Role"
      responses:
        201:
          description: Role records created
  /roles/{id}:
    get:
      tags:
        - Role
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Role"
        404:
          description: Role not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of Role record to fetch
          required: true
          type: integer
    put:
      tags:
        - Role
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Role"
        404:
          description: Role not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of Role to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Role"
  /roles/{id}/delete:
    post:
      tags:
        - Role
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: Role record not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of Owner record to delete
          required: true
          type: integer

  /rolepermissions/bulk:
    post:
      tags:
        - RolePermission
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/rolepermissionss"
      responses:
        201:
          description: rolepermissionss records created  /users:
    get:
      tags:
        - User
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/User"
      deprecated: false'
    post:
      tags:
        - User
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/User"
      responses:
        201:
          description: User record created
          headers:
            Location:
              description: A link to the User
              type: string
              format: url
          schema:
            $ref: "#/definitions/User"
  /users/bulk:
    post:
      tags:
        - User
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/User"
      responses:
        201:
          description: User records created
  /users/{id}:
    get:
      tags:
        - User
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/User"
        404:
          description: User not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of User record to fetch
          required: true
          type: integer
    put:
      tags:
        - User
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/User"
        404:
          description: User not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of User to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/User"
  /users/{id}/delete:
    post:
      tags:
        - User
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: User record not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of Owner record to delete
          required: true
          type: integer

  /usergroups/bulk:
    post:
      tags:
        - 
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/usergroupss"
      responses:
        201:
          description: usergroupss records created
  /userroles/bulk:
    post:
      tags:
        - UserRole
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/userroless"
      responses:
        201:
          description: userroless records created  /regions:
    get:
      tags:
        - Region
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/Region"
      deprecated: false'
    post:
      tags:
        - Region
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Region"
      responses:
        201:
          description: Region record created
          headers:
            Location:
              description: A link to the Region
              type: string
              format: url
          schema:
            $ref: "#/definitions/Region"
  /regions/bulk:
    post:
      tags:
        - Region
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/Region"
      responses:
        201:
          description: Region records created
  /regions/{id}:
    get:
      tags:
        - Region
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Region"
        404:
          description: Region not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of Region record to fetch
          required: true
          type: integer
    put:
      tags:
        - Region
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/Region"
        404:
          description: Region not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of Region to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Region"
  /regions/{id}/delete:
    post:
      tags:
        - Region
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: Region record not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of Owner record to delete
          required: true
          type: integer
  /districts:
    get:
      tags:
        - District
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/District"
      deprecated: false'
    post:
      tags:
        - District
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/District"
      responses:
        201:
          description: District record created
          headers:
            Location:
              description: A link to the District
              type: string
              format: url
          schema:
            $ref: "#/definitions/District"
  /districts/bulk:
    post:
      tags:
        - District
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/District"
      responses:
        201:
          description: District records created
  /districts/{id}:
    get:
      tags:
        - District
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/District"
        404:
          description: District not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of District record to fetch
          required: true
          type: integer
    put:
      tags:
        - District
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/District"
        404:
          description: District not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of District to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/District"
  /districts/{id}/delete:
    post:
      tags:
        - District
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: District record not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of Owner record to delete
          required: true
          type: integer
  /serviceareas:
    get:
      tags:
        - ServiceArea
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/ServiceArea"
      deprecated: false'
    post:
      tags:
        - ServiceArea
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/ServiceArea"
      responses:
        201:
          description: ServiceArea record created
          headers:
            Location:
              description: A link to the ServiceArea
              type: string
              format: url
          schema:
            $ref: "#/definitions/ServiceArea"
  /serviceareas/bulk:
    post:
      tags:
        - ServiceArea
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/ServiceArea"
      responses:
        201:
          description: ServiceArea records created
  /serviceareas/{id}:
    get:
      tags:
        - ServiceArea
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/ServiceArea"
        404:
          description: ServiceArea not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of ServiceArea record to fetch
          required: true
          type: integer
    put:
      tags:
        - ServiceArea
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/ServiceArea"
        404:
          description: ServiceArea not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of ServiceArea to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/ServiceArea"
  /serviceareas/{id}/delete:
    post:
      tags:
        - ServiceArea
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: ServiceArea record not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of Owner record to delete
          required: true
          type: integer
  /cities:
    get:
      tags:
        - City
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/City"
      deprecated: false'
    post:
      tags:
        - City
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/City"
      responses:
        201:
          description: City record created
          headers:
            Location:
              description: A link to the City
              type: string
              format: url
          schema:
            $ref: "#/definitions/City"
  /cities/bulk:
    post:
      tags:
        - City
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/City"
      responses:
        201:
          description: City records created
  /cities/{id}:
    get:
      tags:
        - City
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/City"
        404:
          description: City not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of City record to fetch
          required: true
          type: integer
    put:
      tags:
        - City
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/City"
        404:
          description: City not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of City to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/City"
  /cities/{id}/delete:
    post:
      tags:
        - City
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: City record not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of Owner record to delete
          required: true
          type: integer
  /schooldistricts:
    get:
      tags:
        - SchoolDistrict
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/SchoolDistrict"
      deprecated: false'
    post:
      tags:
        - SchoolDistrict
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolDistrict"
      responses:
        201:
          description: SchoolDistrict record created
          headers:
            Location:
              description: A link to the SchoolDistrict
              type: string
              format: url
          schema:
            $ref: "#/definitions/SchoolDistrict"
  /schooldistricts/bulk:
    post:
      tags:
        - SchoolDistrict
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/SchoolDistrict"
      responses:
        201:
          description: SchoolDistrict records created
  /schooldistricts/{id}:
    get:
      tags:
        - SchoolDistrict
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/SchoolDistrict"
        404:
          description: SchoolDistrict not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolDistrict record to fetch
          required: true
          type: integer
    put:
      tags:
        - SchoolDistrict
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/SchoolDistrict"
        404:
          description: SchoolDistrict not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolDistrict to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/SchoolDistrict"
  /schooldistricts/{id}/delete:
    post:
      tags:
        - SchoolDistrict
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: SchoolDistrict record not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of Owner record to delete
          required: true
          type: integer
  /groupMembership:
    get:
      tags:
        - GroupMembership
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/GroupMembership"
      deprecated: false'
    post:
      tags:
        - GroupMembership
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/GroupMembership"
      responses:
        201:
          description: GroupMembership record created
          headers:
            Location:
              description: A link to the GroupMembership
              type: string
              format: url
          schema:
            $ref: "#/definitions/GroupMembership"
  /groupMembership/bulk:
    post:
      tags:
        - GroupMembership
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/GroupMembership"
      responses:
        201:
          description: GroupMembership records created
  /groupMembership/{id}:
    get:
      tags:
        - GroupMembership
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/GroupMembership"
        404:
          description: GroupMembership not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of GroupMembership record to fetch
          required: true
          type: integer
    put:
      tags:
        - GroupMembership
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/GroupMembership"
        404:
          description: GroupMembership not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of GroupMembership to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/GroupMembership"
  /groupMembership/{id}/delete:
    post:
      tags:
        - GroupMembership
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: GroupMembership record not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of Owner record to delete
          required: true
          type: integer
  /userFavourite:
    get:
      tags:
        - UserFavourite
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/UserFavourite"
      deprecated: false'
    post:
      tags:
        - UserFavourite
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/UserFavourite"
      responses:
        201:
          description: UserFavourite record created
          headers:
            Location:
              description: A link to the UserFavourite
              type: string
              format: url
          schema:
            $ref: "#/definitions/UserFavourite"
  /userFavourite/bulk:
    post:
      tags:
        - UserFavourite
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/UserFavourite"
      responses:
        201:
          description: UserFavourite records created
  /userFavourite/{id}:
    get:
      tags:
        - UserFavourite
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/UserFavourite"
        404:
          description: UserFavourite not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of UserFavourite record to fetch
          required: true
          type: integer
    put:
      tags:
        - UserFavourite
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/UserFavourite"
        404:
          description: UserFavourite not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of UserFavourite to fetch
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/UserFavourite"
  /userFavourite/{id}/delete:
    post:
      tags:
        - UserFavourite
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
        404:
          description: UserFavourite record not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of Owner record to delete
          required: true
          type: integer
  /schoolbuses/search:
    get:
      summary: Searches school buses
      description:
        Used for the search schoolbus page.
      tags:
        - SchoolBus
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: serviceareas
          in: query
          description: Service areas (array of id numbers)
          collectionFormat: multi
          type: array
          items:
            type: integer
        - name: inspectors
          in: query
          description: Assigned School Bus Inspectors (array of id numbers)
          type: array
          items:
              type: integer
        - name: cities
          in: query
          description: Cities (array of id numbers)
          type: array
          items:
              type: integer
        - name: schooldistricts
          in: query
          description: School Districts (array of id numbers)
          type: array
          items:
              type: integer
        - name: owner
          in: query
          type: integer
        - name: regi
          in: query
          description: ICBC Regi Number
          type: string
        - name: vin
          in: query
          description: VIN
          type: string
        - name: plate
          in: query
          description: License Plate String
          type: string
        - name: includeInactive
          in: query
          description: True if Inactive schoolbuses will be returned
          type: boolean
        - name: onlyReInspections
          in: query
          description: If true, only buses that need a re-inspection will be returned
          type: boolean
        - name: startDate
          description: Inspection start date
          in: query
          type: string
          format: date-time
        - name: endDate
          description: Inspection end date
          in: query
          type: string
          format: date-time
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/SchoolBus"
  /schoolbuses/{id}/inspections:
    get:
      tags:
        - SchoolBus
      consumes: []
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/Inspection'
        "404":
          description: SchoolBus not found
      deprecated: false
      parameters:
        - name: id
          in: path
          description: id of SchoolBus to fetch Inspections for
          required: true
          type: integer
  /schoolbuses/{id}/notes:
    get:
      description: Returns notes for a particular SchoolBus.
      tags:
        - SchoolBus
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SchoolBusNote'
        "404":
           description: SchoolBus not found
      parameters:
        - name: id
          in: path
          description: id of SchoolBus to fetch notes for
          required: true
          type: integer
  /schoolbuses/{id}/attachments:
    get:
      description: Returns attachments for a particular SchoolBus
      tags:
        - SchoolBus
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SchoolBusAttachment'
        "404":
           description: SchoolBus not found
      parameters:
        - name: id
          in: path
          description: id of SchoolBus to fetch attachments for
          required: true
          type: integer
  /schoolbuses/{id}/history:
    get:
      description: Returns History for a particular SchoolBus
      tags:
        - SchoolBus
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SchoolBusHistory'
      parameters:
        - name: id
          in: path
          description: id of SchoolBus to fetch SchoolBusHistory for
          required: true
          type: integer
  /schoolbuses/{id}/ccwdata:
    get:
    description: Returns CCWData for a particular Schoolbus
    tags:
      - SchoolBus
    produces:
      - text/plain
      - application/json
      - text/json
    responses:
      '200':
        description: OK
        schema:
          $ref: '#/definitions/CCWData'
    parameters:
      - name: id
        in: path
        description: id of SchoolBus to fetch CCWData for
        required: true
        type: integer
  /schoolbusowners/{id}/attachments:
    get:
      description: Returns attachments for a particular SchoolBusOwner
      tags:
        - SchoolBusOwner
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SchoolBusOwnerAttachment'
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwner to fetch attachments for
          required: true
          type: integer
  /schoolbusowners/{id}/notes:
    get:
      description: Returns notes for a particular SchoolBusOwner
      tags:
        - SchoolBusOwner
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SchoolBusOwnerNote'
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwner to fetch notes for
          required: true
          type: integer
  /schoolbusownercontacts/{id}/contactphones:
    get:
      description: Returns phone contacts for a particular SchoolBusOwner
      tags:
        - SchoolBusOwnerContact
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SchoolBusOwnerContactPhone'
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwner to fetch contact phone for
          required: true
          type: integer
  /schoolbusownercontacts/{id}/contactaddresses:
    get:
      description: Returns address contacts for a particular SchoolBusOwner
      tags:
        - SchoolBusOwnerContact
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/SchoolBusOwnerContactAddress'
      parameters:
        - name: id
          in: path
          description: id of SchoolBusOwner to fetch contact address for
          required: true
          type: integer
  /roles/{id}/permissions:
    get:
      description: Get all the permissions for a role
      tags:
        - Role
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Role to fetch
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/PermissionViewModel"
    put:
      description: Updates the permissions for a role
      tags:
        - Role
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Role to update
          required: true
          type: integer
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/Permission"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/PermissionViewModel"
        404:
          description: Role not found
    post:
      description: Adds a permissions to a role
      tags:
        - Role
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Role to update
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/Permission"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/PermissionViewModel"
        404:
          description: Role not found
  /roles/{id}/users:
    get:
      description: Gets all the users for a role
      tags:
        - Role
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Role to fetch
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/UserRoleViewModel"
    put:
      description: Updates the users for a role
      tags:
        - Role
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of Role to update
          required: true
          type: integer
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/UserRoleViewModel"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/UserRoleViewModel"
        404:
          description: Role not found
  /users/current:
    get:
      description: Get the currently logged in user
      tags:
        - CurrentUser
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        200:
          description: OK
          schema:
            $ref: "#/definitions/CurrentUserViewModel"
  /users/{id}/roles:
    get:
      description: Returns the roles for a user
      tags:
        - User
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to fetch
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/UserRoleViewModel"
        404:
           description: User not found
    post:
      description: Adds a role to a user
      tags:
        - User
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to update
          required: true
          type: integer
        - name: item
          in: body
          required: true
          schema:
            $ref: "#/definitions/UserRoleViewModel"
      responses:
        201:
          description: Role created for user
          headers:
            Location:
              description: A link to the User Role
              type: string
              format: url
          schema:
            $ref: "#/definitions/UserRoleViewModel"
    put:
      description: Updates the roles for a user
      tags:
        - User
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to update
          required: true
          type: integer
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/UserRoleViewModel"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/UserRoleViewModel"
        404:
          description: User not found
  /users/{id}/permissions:
    get:
      description: Returns the set of permissions for a user
      tags:
        - User
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to fetch
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/PermissionViewModel"
        404:
           description: User not found
  /users/{id}/groups:
    get:
      description: Returns all groups that a user is a member of
      tags:
        - User
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to fetch
          required: true
          type: integer
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/GroupMembershipViewModel"
        404:
           description: User not found
    put:
      description: Updates the active set of groups for a user
      tags:
        - User
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to update
          required: true
          type: integer
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/GroupMembership"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/GroupMembershipViewModel"
        404:
          description: User not found
    post:
      description: Add to the active set of groups for a user
      tags:
        - User
      consumes:
        - application/json
      produces:
        - text/plain
        - application/json
        - text/json
      parameters:
        - name: id
          in: path
          description: id of User to update
          required: true
          type: integer
        - name: items
          in: body
          required: true
          schema:
            type: array
            items:
              $ref: "#/definitions/GroupMembership"
      responses:
        200:
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/GroupMembershipViewModel"
        404:
          description: User not found
  /users/{id}/favourites:
    get:
      description: Returns a user's favourites of a given context type
      tags:
        - User
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/UserFavouriteViewModel"
        "404":
           description: User not found
      parameters:
        - name: id
          in: path
          description: id of User to fetch favorites for
          required: true
          type: integer
  /users/{id}/notifications:
    get:
      description: Returns a user's notifications
      tags:
        - User
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/NotificationViewModel"
      parameters:
        - name: id
          in: path
          description: id of User to fetch notifications for
          required: true
          type: integer
  /regions/{id}/districts:
    get:
      description: Returns the districts for a specific region
      tags:
        - Region
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/District'
      parameters:
        - name: id
          in: path
          description: id of Region for which to fetch the Districts
          required: true
          type: integer
  /districts/{id}/serviceareas:
    get:
      description: Returns the Service Areas for a specific region
      tags:
        - District
      produces:
        - text/plain
        - application/json
        - text/json
      responses:
        '200':
          description: OK
          schema:
            type: array
            items:
              $ref: '#/definitions/ServiceArea'
      parameters:
        - name: id
          in: path
          description: id of District for which to fetch the ServiceAreas
          required: true
          type: integer
definitions:
  SchoolBus:
    type: object
    description: The School Bus entity, including only information that is of specific interest to the School Bus inspector and not tracked in other systems such as ICBC or NSC
    required:
      - id
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
      regi:
        type: string
        description: The ICBC Registration number for the School Bus
      plate:
        type: string
        description: The ICBC Plate Number for the School Bus
      VIN:
        type: string
        description: The VIN for the School Bus
      schoolBusOwner:
        $ref: "#/definitions/"
        description: 
      permitNumber:
        type: string
        description: The (generated) permit number for the School Bus. This will be added by the Inspector before the School Bus Permit can be printed and the bus can go into service.
      status:
        type: string
        description: Enumerated type of Status - Inactive,  Active,  Archived
      isOutOfProvince:
        type: boolean
        description: 
      serviceArea:
        $ref: "#/definitions/"
        description: 
      homeTerminalAddr1:
        type: string
        description: Address 1 of physical location of the School Bus.
      homeTerminalAddr2:
        type: string
        description: Address 2 of physical location of the School Bus.
      homeTerminalCity:
        $ref: "#/definitions/"
        description: City of physical location of the School Bus.
      homeTerminalProvince:
        type: string
        description: Province of physical location of the School Bus - free form.
      homeTerminalPostalCode:
        type: string
        description: Postal Code of physical location of the School Bus.
      homeTerminalComment:
        type: string
        description: A comment about the physical location of the bus so that the Inspector can more easily find it for an inspection
      restrictions:
        type: string
        description: Text of any restrictions to be printed on the school bus permit.
      nextInspectionDate:
        type: string
        format: date-time
        description: The next inspection date for this School Bus. Set at the time an inspection is set.
      nextInspectionType:
        type: string
        description: An enumerated type (by the UI) to indicate the type of the next inspection - Annual or Re-inspection based on the Pass&#x2F;Fail status of the most recent inspection.
      schoolBusDistrict:
        $ref: "#/definitions/"
        description: The School District in which the School Bus operates. The school bus may or may not be associated with the School District itself - we just track where it is regardless.
      isIndependentSchool:
        type: boolean
        description: True if the School Bus is associated with an Independent School. If true,  the name of the Independent School should be in the companion field.
      nameOfIndependentSchool:
        type: string
        description: The name of the Independent School to which the School Bus is associated. Should be null if the companion isIndependentSchool is false.
      schoolBusClass:
        type: string
        description: The enumerated class of School Bus.
      schoolBusBodyType:
        type: string
        description: The enumerated body type of the School Bus.
      schoolBusBodyTypeOther:
        type: string
        description: The enumerated body type of the School Bus.
      schoolBusUnitNumber:
        type: string
        description: The unit number of the Bus as defined by the School Bus owner - freeform text.
      schoolBusSeatingCapacity:
        format: int32
        type: integer
        description: The maximum number of passengers in the bus based on the specific use of the bus. For example,  the same 2-per seat &#x2F; 24-passenger model might have a seating capacity of 36 if the specific bus is to be used for small children,  3 per seat.
      mobilityAidCapacity:
        format: int32
        type: integer
        description: The number of mobility aid passenger seats in the bus.
  SchoolBusNote:
    type: object
    description: Notes entered by users about a specific School Bus.
    required:
      - id
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
      note:
        type: string
        description: The contents of the note.
      isNoLongerRelevant:
        type: boolean
        description: A user set flag that the note is no longer relevant. Allows the note to be retained for historical reasons,  but identified to the user as no longer relevant.
      schoolBus:
        $ref: "#/definitions/"
        description: 
  SchoolBusAttachment:
    type: object
    description: Attachments uploaded by users about a specific School Bus. Attachments are stored in the file system, with rows in this table pointing to the file system location of the attachment.
    required:
      - id
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
      internalFileName:
        type: string
        description: The physical location of the attachment on the file system.
      externalFileName:
        type: string
        description: The name of the attachment as defined by the user in uploading the document.
      description:
        type: string
        description: A note about the attachment,  optionally maintained by the user.
      schoolBus:
        $ref: "#/definitions/"
        description: 
  SchoolBusHistory:
    type: object
    description: The history of updates made to a School Bus. Exact format of the history TBD.
    required:
      - id
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
      schoolBus:
        $ref: "#/definitions/"
        description: 
  SchoolBusOwner:
    type: object
    description: 
    required:
      - id
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
      name:
        type: string
        description: The name of the School Bus owner as defined by the user&#x2F;Inspector. Not tied to the ICBC or NSC names,  but whatever is most useful for the Inspectors.
      status:
        type: string
        description: Status of the School Bus owner - enumerated value Active,  Archived
      dateCreated:
        type: string
        format: date-time
        description: The date-time of the creation of the record from the audit fields. Since this might be surfaced in the API,  adding it to the definition.
      primaryContact:
        $ref: "#/definitions/"
        description: Link to the designated Primary Contact for the Inspector to the School Bus Owner organization.
      serviceArea:
        $ref: "#/definitions/"
        description: The District to which this School Bus is affliated.
      nextInspectionDate:
        type: string
        format: date-time
        description: The calculated next inspection date from across the School Buses associated with this School Bus Owner
      numberOfBuses:
        format: int32
        type: integer
        description: The calculated count of the number of School Buses associated with this School Bus Owner
      contacts:
        type: array
        items:
          $ref: "#/definitions/"
        description: 
  SchoolBusOwnerAttachment:
    type: object
    description: 
    required:
      - id
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
      schoolBusOwner:
        $ref: "#/definitions/"
        description: 
      internalFileName:
        type: string
        description: The physical location of the attachment on the file system.
      externalFileName:
        type: string
        description: The name of the attachment as defined by the user in uploading the document.
      description:
        type: string
        description: A note about the attachment,  optionally maintained by the user.
  SchoolBusOwnerNote:
    type: object
    description: 
    required:
      - id
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
      isNoLongerRelevant:
        type: boolean
        description: A user set flag that the note is no longer relevant. Allows the note to be retained for historical reasons,  but identified to the user as no longer relevant.
      note:
        type: string
        description: The contents of the note.
      schoolBusOwner:
        $ref: "#/definitions/"
        description: 
  SchoolBusOwnerContact:
    type: object
    description: 
    required:
      - id
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
      givenName:
        type: string
        description: The given name of the contact.
      surname:
        type: string
        description: The surname of the contact.
      role:
        type: string
        description: The role of the contact. UI controlled as to whether it is free form or selected from an enumerated list.
      notes:
        type: string
        description: Notes about the contact.
      schoolBusOwnerContactPhones:
        type: array
        items:
          $ref: "#/definitions/"
        description: 
      schoolBusOwnerContactAddresses:
        type: array
        items:
          $ref: "#/definitions/"
        description: 
  SchoolBusOwnerContactPhone:
    type: object
    description: 
    required:
      - id
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
      type:
        type: string
        description: The type of the phone number. UI controlled as to whether it is free form or selected from an enumerated list.
      phoneNumber:
        type: string
        description: The phone number of the contact. Entered as free form to support a range of formats.
  SchoolBusOwnerContactAddress:
    type: object
    description: 
    required:
      - id
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
      type:
        type: string
        description: The type of the address. UI controlled as to whether it is free form or selected from an enumerated list.
      addr1:
        type: string
        description: Address 1 line of the address.
      addr2:
        type: string
        description: Address 2 line of the address.
      city:
        type: string
        description: The City of the address.
      province:
        type: string
        description: The Province of the address.
      postalCode:
        type: string
        description: The postal code of the address.
  SchoolBusOwnerHistory:
    type: object
    description: The history of updates made to a School Bus Owner record. Exact format of the history TBD.
    required:
      - id
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
      schoolBusOwner:
        $ref: "#/definitions/"
        description: 
  CCWData:
    type: object
    description: Data pulled in from external sources (ICBC, NSC, etc) about School Buses and retained but not updated in the School Bus app. All data elements are simply copied from the comparable fields in the WSDLs of the Web Service Calls.
    required:
      - id
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
      ICBCRegi:
        type: string
        description: The Registration Number (Regi) is the link between the CCW information and a specific School Bus
      ICBCModelYear:
        format: int32
        type: integer
        description: Vehicle Year
      ICBCVehicleType:
        type: string
        description: 
      ICBCRateClass:
        type: string
        description: 
      ICBCCVIPDecal:
        type: string
        description: 
      ICBCFleetUnitNo:
        format: int32
        type: integer
        description: 
      ICBCGrossVehicleWeight:
        format: int32
        type: integer
        description: 
      ICBCMake:
        type: string
        description: 
      ICBCBody:
        type: string
        description: 
      ICBCRebuiltStatus:
        type: string
        description: 
      ICBCCVIPExpiry:
        type: string
        format: date-time
        description: 
      ICBCNetWt:
        format: int32
        type: integer
        description: 
      ICBCModel:
        type: string
        description: 
      ICBCFuel:
        type: string
        description: 
      ICBCSeatingCapacity:
        format: int32
        type: integer
        description: 
      ICBCColour:
        type: string
        description: 
      ICBCNotesAndOrders:
        type: string
        description: 
      ICBCOrderedOn:
        type: string
        format: date-time
        description: 
      ICBCRegOwnerName:
        type: string
        description: 
      ICBCRegOwnerAddr1:
        type: string
        description: 
      ICBCRegOwnerAddr2:
        type: string
        description: 
      ICBCRegOwnerCity:
        type: string
        description: 
      ICBCRegOwnerProv:
        type: string
        description: 
      ICBCRegOwnerPostalCode:
        type: string
        description: 
      ICBCRegOwnerStatus:
        type: string
        description: 
      ICBCRegOwnerRODL:
        type: string
        description: 
      ICBCRegOwnerPool:
        type: string
        description: 
      NSCClientNum:
        type: string
        description: 
      NSCCarrierName:
        type: string
        description: 
      NSCCarrierConditions:
        type: string
        description: 
      NSCCarrierSafetyRating:
        type: string
        description: 
      NSCPolicyNumber:
        type: string
        description: 
      NSCPolicyEffectiveDate:
        type: string
        format: date-time
        description: 
      NSCPolicyStatusDate:
        type: string
        format: date-time
        description: 
      NSCPolicyExpiryDate:
        type: string
        format: date-time
        description: 
      NSCPolicyStatus:
        type: string
        description: 
      NSCPlateDecal:
        type: string
        description: 
  Inspection:
    type: object
    description: 
    required:
      - id
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key make this match the Inspection Details page
      schoolBus:
        $ref: "#/definitions/"
        description: 
      inspector:
        $ref: "#/definitions/"
        description: Defaults for a new inspection to the current user,  but can be changed as needed.
      inspectionDate:
        type: string
        format: date-time
        description: The date the inspection was conducted.
      inspectionType:
        type: string
        description: The type of the inspection - enumerated type of Annual or Re-inspection,  pulled from the School Bus record at the time the inspection record is created
      inspectionResult:
        type: string
        description: The result of the inspection - enumerated type of Passed or Failed. The detailed results of the inspection are in RIP and not duplicated here.
      notes:
        type: string
        description: A note about the inspection independent of what goes into the RIP inspection - this is just for the School Bus application.
      restrictions:
        type: string
        description: The Restrictions text from the School Bus record. This is visible on the Inspections screen as a convenience for adjusting it prior to printing the Permit Page.
      RIPInspectionId:
        type: string
        description: The ID of the RIP inspection. The expectation is that the user will manually enter a RIP ID such that an external URL can be formed to allow the user to open the RIP inspection and see the inspection details.
  FavouriteContextType:
    type: object
    description: The name for a place in the UI where per user settings can be stored - for example, the School Bus search screen, School Bus Owner search screen, etc.
    required:
      - id
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
      name:
        type: string
        description: Context Name known by the UI.
  UserFavourite:
    type: object
    description: User specific settings for a specific location in the UI. The location and saved settings are internally defined by the UI.
    required:
      - id
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
      name:
        type: string
        description: The user-defined name for the recorded settings. Allows the user to save different groups of settings and access each one easily when needed.
      value:
        type: string
        description: The settings saved by the user. In general,  a UI defined chunk of json that stores the settings in place when the user created the favourite.
      isDefault:
        type: boolean
        description: True if this Favourite is the default for this Context Type. On first access to a context in a session the default favourite for the context it is invoked. If there is no default favourite,  a system-wide default is invoked. On return to the context within a session,  the last parameters used are reapplied.
      favouriteContextType:
        $ref: "#/definitions/"
        description: 
  Region:
    type: object
    description: 
    required:
      - id
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
      ministryRegionID:
        format: int32
        type: integer
        description: The Ministry ID for the Region
      name:
        type: string
        description: The name of the Region
      startDate:
        type: string
        format: date-time
        description: The effective date of the Region - NOT CURRENTLY ENFORCED IN SCHOOL BUS
      endDate:
        type: string
        format: date-time
        description: The end date of the Region; null if active - NOT CURRENTLY ENFORCED IN SCHOOL BUS
  District:
    type: object
    description: 
    required:
      - id
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
      ministryDistrictID:
        format: int32
        type: integer
        description: The Ministry ID for the District
      name:
        type: string
        description: The name of the District
      region:
        $ref: "#/definitions/"
        description: The region in which the District is found.
      startDate:
        type: string
        format: date-time
        description: The effective date of the District ID - NOT CURRENTLY ENFORCED IN SCHOOL BUS
      endDate:
        type: string
        format: date-time
        description: The end date of the District; null if active - NOT CURRENTLY ENFORCED IN SCHOOL BUS
  ServiceArea:
    type: object
    description: 
    required:
      - id
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
      ministryServiceAreaID:
        format: int32
        type: integer
        description: The Ministry ID for the Service Area
      name:
        type: string
        description: The name of the Service Area
      district:
        $ref: "#/definitions/"
        description: The district in which the Service Area is found.
      startDate:
        type: string
        format: date-time
        description: The effective date of the Service Area - NOT CURRENTLY ENFORCED IN SCHOOL BUS
      endDate:
        type: string
        format: date-time
        description: The end date of the Service Area; null if active - NOT CURRENTLY ENFORCED IN SCHOOL BUS
  SchoolDistrict:
    type: object
    description: 
    required:
      - id
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
      name:
        type: string
        description: The full name of the School District
      shortName:
        type: string
        description: A short name for the School District useful in some areas of the UI. Usually with format \&amp;quot;SD 61\&amp;quot;.
  City:
    type: object
    description: A list of cities in BC. Authoritative source to be determined.
    required:
      - id
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
      name:
        type: string
        description: The name of the City
  Notification:
    type: object
    description: 
    required:
      - id
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
      event:
        $ref: "#/definitions/"
        description: 
      event2:
        $ref: "#/definitions/"
        description: 
      hasBeenViewed:
        type: boolean
        description: 
      isWatchNotification:
        type: boolean
        description: 
      isExpired:
        type: boolean
        description: 
      isAllDay:
        type: boolean
        description: 
      priorityCode:
        type: string
        description: 
      user:
        $ref: "#/definitions/"
        description: 
  NotificationEvent:
    type: object
    description: 
    required:
      - id
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
      eventTime:
        type: string
        format: date-time
        description: 
      eventTypeCode:
        type: string
        description: 
      eventSubTypeCode:
        type: string
        description: 
      notes:
        type: string
        description: 
      notificationGenerated:
        type: boolean
        description: 
      schoolBus:
        $ref: "#/definitions/"
        description: 
  User:
    type: object
    description: Information about the users of the system.
    required:
      - id
      - active
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
      givenName:
        type: string
        description: 
      surname:
        type: string
        description: 
      initials:
        type: string
        description: 
      email:
        type: string
        description: 
      active:
        type: boolean
        description: 
      smUserId:
        type: string
        description: Security Manager User ID
      guid:
        type: string
        description: 
      smAuthorizationDirectory:
        type: string
        description: 
      userRoles:
        type: array
        items:
          $ref: "#/definitions/"
        description: 
      groupMemberships:
        type: array
        items:
          $ref: "#/definitions/"
        description: 
  UserRole:
    type: object
    description: 
    required:
      - id
      - effectiveDate
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
      effectiveDate:
        type: string
        format: date-time
        description: 
      expiryDate:
        type: string
        format: date-time
        description: 
      user:
        $ref: "#/definitions/"
        description: 
      role:
        $ref: "#/definitions/"
        description: 
  Role:
    type: object
    description: 
    required:
      - id
      - name
      - description
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
      name:
        type: string
        description: 
      description:
        type: string
        description: 
      rolePermissions:
        type: array
        items:
          $ref: "#/definitions/"
        description: 
      userRoles:
        type: array
        items:
          $ref: "#/definitions/"
        description: 
  RolePermission:
    type: object
    description: 
    required:
      - id
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
      role:
        $ref: "#/definitions/"
        description: 
      permission:
        $ref: "#/definitions/"
        description: 
  Permission:
    type: object
    description: 
    required:
      - id
      - code
      - name
      - description
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
      code:
        type: string
        description: 
      name:
        type: string
        description: 
      description:
        type: string
        description: 
  GroupMembership:
    type: object
    description: 
    required:
      - id
      - active
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
      active:
        type: boolean
        description: 
      group:
        $ref: "#/definitions/"
        description: 
      user:
        $ref: "#/definitions/"
        description: 
  Group:
    type: object
    description: 
    required:
      - id
      - name
      - description
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
      name:
        type: string
        description: 
      description:
        type: string
        description: 
  GroupMembership:
    type: object
    required:
      - id
      - active
    properties:
      id:
        format: int32
        type: integer
        description: Primary Key
        x-type-options:
          min: 1
          max: 1000
      active:
        type: boolean
      group:
        $ref: '#/definitions/Group'
      user:
        $ref: '#/definitions/User'
  UserViewModel:
    type: object
    x-codegen-viewmodel: true
    required:
      - id
      - active
    properties:
      id:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
      givenName:
        type: string
        x-chance-type: name
      surname:
        type: string
        x-chance-type: name
      initials:
        type: string
      email:
        type: string
        x-chance-type: email
      active:
        type: boolean
  CurrentUserViewModel:
    type: object
    x-codegen-viewmodel: true
    properties:
      givenName:
        type: string
        x-chance-type: name
      surname:
        type: string
        x-chance-type: name
      fullName:
        type: string
      districtName:
        type: string
      overdueInspections:
        format: int32
        type: integer
      scheduledInspections:
        format: int32
        type: integer
      dueNextMonthInspections:
        format: int32
        type: integer
  UserDetailsViewModel:
    type: object
    x-codegen-viewmodel: true
    required:
      - id
      - active
    properties:
      id:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
      givenName:
        type: string
        x-chance-type: name
      surname:
        type: string
        x-chance-type: name
      initials:
        type: string
      email:
        type: string
        x-chance-type: email
      active:
        type: boolean
      permissions:
        type: array
        items:
          $ref: '#/definitions/PermissionViewModel'
  UserRoleViewModel:
    type: object
    x-codegen-viewmodel: true
    required:
      - effectiveDate
      - userId
      - roleId
    properties:
      id:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
      effectiveDate:
        type: string
        format: date-time
      expiryDate:
        type: string
        format: date-time
      userId:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
      roleId:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
  RoleViewModel:
    type: object
    x-codegen-viewmodel: true
    required:
      - id
      - name
      - description
    properties:
      id:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
      name:
        type: string
        x-chance-type: name
      description:
        type: string
        x-chance-type: sentence
  RolePermissionViewModel:
    type: object
    x-codegen-viewmodel: true
    required:
      - roleId
      - permissionId
    properties:
      id:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
      roleId:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
      permissionId:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
  PermissionViewModel:
    type: object
    x-codegen-viewmodel: true
    required:
      - code
      - name
      - description
    properties:
      code:
        type: string
      name:
        type: string
        x-chance-type: name
      description:
        type: string
        x-chance-type: sentence
  GroupMembershipViewModel:
    type: object
    x-codegen-viewmodel: true
    required:
      - active
      - userId
      - groupId
    properties:
      id:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
      active:
        type: boolean
      groupId:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
      userId:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
  GroupViewModel:
    type: object
    x-codegen-viewmodel: true
    required:
      - name
      - description
    properties:
      id:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
      name:
        type: string
        x-chance-type: name
      description:
        type: string
        x-chance-type: sentence
  UserFavouriteViewModel:
    type: object
    x-codegen-viewmodel: true
    properties:
      id:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
      name:
        type: string
        description:  Context Name
        x-chance-type: name
      value:
        type: string
        description:  Saved search
        x-chance-type: word
      isDefault:
        type: boolean
      favouriteContextTypeId:
        format: int32
        type: integer
        x-type-options:
          min: 1
          max: 1000
  NotificationViewModel:
    type: object
    x-codegen-viewmodel: true
    properties:
      id:
          format: int32
          type: integer
          x-type-options:
            min: 1
            max: 1000
      eventId:
          format: int32
          type: integer
          x-type-options:
            min: 1
            max: 1000
      event2Id:
          format: int32
          type: integer
          x-type-options:
            min: 1
            max: 1000
      hasBeenViewed:
        type: boolean
      isWatchNotification:
        type: boolean
      isExpired:
        type: boolean
      isAllDay:
        type: boolean
      priorityCode:
        type: string
      userId:
          format: int32
          type: integer
          x-type-options:
            min: 1
            max: 1000
securityDefinitions: {}
